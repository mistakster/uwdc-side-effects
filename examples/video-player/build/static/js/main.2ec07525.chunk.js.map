{"version":3,"sources":["logo.svg","Tabs.js","Logo.js","useDeepCompareEffect.js","VideoPlayer.js","Info.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Tabs","_ref","titles","children","_useState","useState","_useState2","Object","slicedToArray","activeTab","setActiveTab","tabs","Children","toArray","react_default","a","createElement","className","map","tab","index","key","onClick","concat","Logo","src","logo","alt","useDeepCompareEffect","callback","dependencies","useEffect","value","ref","useRef","isEqual","current","useDeepCompareMemoize","VideoPlayer","props","dispatch","playerProps","objectWithoutProperties","playerContainer","video","document","classList","add","appendChild","player","VideoJS","type","on","time","currentTime","dispose","Info","ready","isPlaying","Number","toFixed","initialState","reducer","state","action","objectSpread","Error","Content","_useReducer","useReducer","_useReducer2","src_VideoPlayer","fluid","aspectRatio","controls","preload","poster","src_Info","App","src_Tabs","src_Content","src_Logo_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ec07525.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Children, useState } from 'react';\n\nconst Tabs = ({ titles, children }) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const tabs = Children.toArray(children);\n\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      <div className=\"nav nav-pills nav-fill my-2\">\n        {tabs.map((tab, index) => (\n          <div key={index} className=\"nav-item\">\n            <span onClick={() => setActiveTab(index)} className={`nav-link ${activeTab === index ? 'active' : 'text-primary'}`}>\n              {titles[index]}\n            </span>\n          </div>\n        ))}\n      </div>\n      {tabs[activeTab]}\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\nimport './Logo.css';\nimport logo from './logo.svg';\n\nconst Logo = () => {\n  return (\n    <img src={logo} className=\"Logo\" alt=\"React logo\"/>\n  );\n};\n\nexport default Logo;\n","import { useEffect, useRef } from 'react';\nimport isEqual from 'lodash-es/isEqual';\n\nfunction useDeepCompareMemoize(value) {\n  const ref = useRef(null);\n\n  if (!isEqual(value, ref.current)) {\n    ref.current = value\n  }\n\n  return ref.current\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  useEffect(callback, useDeepCompareMemoize(dependencies))\n}\n\nexport default useDeepCompareEffect;\n","import React, { useRef } from 'react';\nimport 'video.js/dist/video-js.min.css';\nimport VideoJS from 'video.js';\nimport useDeepCompareEffect from './useDeepCompareEffect';\n\nconst VideoPlayer = (props) => {\n  const { dispatch, src, ...playerProps } = props;\n  const playerContainer = useRef(null);\n\n  function playerInitialization() {\n    const video = document.createElement('video');\n\n    video.classList.add('video-js');\n\n    playerContainer.current.appendChild(video);\n\n    const player = VideoJS(video, playerProps, () => {\n      dispatch({ type: 'ready' });\n    });\n\n    player.on('play', () => {\n      dispatch({ type: 'play' });\n    });\n\n    player.on('pause', () => {\n      dispatch({ type: 'pause' });\n    });\n\n    player.on('timeupdate', () => {\n      dispatch({ type: 'timeupdate', time: player.currentTime() });\n    });\n\n    player.src(src);\n\n    return () => {\n      player.dispose();\n    }\n  }\n\n  useDeepCompareEffect(playerInitialization, [dispatch, src, playerProps]);\n\n  return (\n    <div ref={playerContainer}/>\n  );\n};\n\nexport default VideoPlayer;\n","import React from 'react';\n\nconst Info = (props) => {\n  const { ready, isPlaying, time } = props;\n\n  return (\n    <div className=\"text-light\">\n      <p>Ready: {ready ? 'Yes' : 'No'}</p>\n      <p>Is playing: {isPlaying ? 'Yes' : 'No'}</p>\n      <p>Time: {Number(time).toFixed(4)}</p>\n    </div>\n  );\n};\n\nexport default Info;\n","import React, { useReducer } from 'react';\nimport VideoPlayer from './VideoPlayer';\nimport Info from './Info';\n\nconst initialState = {\n  ready: false,\n  isPlaying: false,\n  time: 0\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ready':\n      return { ...state, ready: true };\n    case 'play':\n      return { ...state, isPlaying: true };\n    case 'pause':\n      return { ...state, isPlaying: false };\n    case 'timeupdate':\n      return { ...state, time: action.time };\n    default:\n      throw new Error('Unknown action');\n  }\n}\n\nconst Content = ({ src }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"h-100 row\">\n      <div className=\"col-8\">\n        <VideoPlayer\n          dispatch={dispatch}\n          fluid\n          aspectRatio=\"640:264\"\n          controls\n          preload='auto'\n          poster='https://vjs.zencdn.net/v/oceans.png'\n          src={src}\n        />\n      </div>\n      <div className=\"col-4\">\n        <Info {...state}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from 'react';\nimport Tabs from './Tabs';\nimport Logo from './Logo';\nimport Content from './Content';\n\nfunction App() {\n  return (\n    <Tabs titles={['Player', 'Logo']}>\n      <Content src={[\n        { type: \"video/mp4\", src: \"https://vjs.zencdn.net/v/oceans.mp4\" },\n        { type: \"video/webm\", src: \"https://vjs.zencdn.net/v/oceans.webm\" },\n        { type: \"video/ogg\", src: \"https://vjs.zencdn.net/v/oceans.ogv\" }\n      ]}/>\n      <Logo/>\n    </Tabs>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}