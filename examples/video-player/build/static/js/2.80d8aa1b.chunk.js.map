{"version":3,"sources":["../node_modules/global/window.js","../node_modules/global/document.js","../node_modules/keycode/index.js","../node_modules/react/index.js","../node_modules/lodash-es/_root.js","../node_modules/mux.js/lib/utils/stream.js","../node_modules/mux.js/lib/mp4/probe.js","../node_modules/webpack/buildin/global.js","../node_modules/mux.js/lib/m2ts/stream-types.js","../node_modules/lodash-es/isBuffer.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/tsml/tsml.js","../node_modules/function-bind/index.js","../node_modules/is-callable/index.js","../node_modules/mux.js/lib/mp4/transmuxer.js","../node_modules/mux.js/lib/aac/utils.js","../node_modules/xhr/index.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/lodash-es/_nodeUtil.js","../node_modules/object-assign/index.js","../node_modules/define-properties/index.js","../node_modules/object-keys/isArguments.js","../node_modules/string.prototype.trim/implementation.js","../node_modules/es-abstract/GetIntrinsic.js","../node_modules/has/src/index.js","../node_modules/string.prototype.trim/polyfill.js","../node_modules/mux.js/lib/mp4/mp4-generator.js","../node_modules/mux.js/lib/m2ts/caption-stream.js","../node_modules/mux.js/lib/tools/caption-packet-parser.js","../node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/react-dom/index.js","../node_modules/safe-json-parse/tuple.js","../node_modules/mux.js/lib/mp4/index.js","../node_modules/mux.js/lib/tools/ts-inspector.js","../node_modules/lodash-es/stubFalse.js","../node_modules/lodash-es/_listCacheClear.js","../node_modules/lodash-es/eq.js","../node_modules/lodash-es/_assocIndexOf.js","../node_modules/lodash-es/_listCacheDelete.js","../node_modules/lodash-es/_listCacheGet.js","../node_modules/lodash-es/_listCacheHas.js","../node_modules/lodash-es/_listCacheSet.js","../node_modules/lodash-es/_ListCache.js","../node_modules/lodash-es/_stackClear.js","../node_modules/lodash-es/_stackDelete.js","../node_modules/lodash-es/_stackGet.js","../node_modules/lodash-es/_stackHas.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/isFunction.js","../node_modules/lodash-es/_coreJsData.js","../node_modules/lodash-es/_isMasked.js","../node_modules/lodash-es/_toSource.js","../node_modules/lodash-es/_baseIsNative.js","../node_modules/lodash-es/_getValue.js","../node_modules/lodash-es/_getNative.js","../node_modules/lodash-es/_Map.js","../node_modules/lodash-es/_nativeCreate.js","../node_modules/lodash-es/_hashClear.js","../node_modules/lodash-es/_hashDelete.js","../node_modules/lodash-es/_hashGet.js","../node_modules/lodash-es/_hashHas.js","../node_modules/lodash-es/_hashSet.js","../node_modules/lodash-es/_Hash.js","../node_modules/lodash-es/_mapCacheClear.js","../node_modules/lodash-es/_isKeyable.js","../node_modules/lodash-es/_getMapData.js","../node_modules/lodash-es/_mapCacheDelete.js","../node_modules/lodash-es/_mapCacheGet.js","../node_modules/lodash-es/_mapCacheHas.js","../node_modules/lodash-es/_mapCacheSet.js","../node_modules/lodash-es/_MapCache.js","../node_modules/lodash-es/_stackSet.js","../node_modules/lodash-es/_Stack.js","../node_modules/lodash-es/_setCacheAdd.js","../node_modules/lodash-es/_setCacheHas.js","../node_modules/lodash-es/_SetCache.js","../node_modules/lodash-es/_arraySome.js","../node_modules/lodash-es/_cacheHas.js","../node_modules/lodash-es/_equalArrays.js","../node_modules/lodash-es/_Uint8Array.js","../node_modules/lodash-es/_mapToArray.js","../node_modules/lodash-es/_setToArray.js","../node_modules/lodash-es/_equalByTag.js","../node_modules/lodash-es/_arrayPush.js","../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/_baseGetAllKeys.js","../node_modules/lodash-es/_arrayFilter.js","../node_modules/lodash-es/stubArray.js","../node_modules/lodash-es/_getSymbols.js","../node_modules/lodash-es/_baseTimes.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/_baseIsArguments.js","../node_modules/lodash-es/isArguments.js","../node_modules/lodash-es/_isIndex.js","../node_modules/lodash-es/isLength.js","../node_modules/lodash-es/_baseIsTypedArray.js","../node_modules/lodash-es/_baseUnary.js","../node_modules/lodash-es/isTypedArray.js","../node_modules/lodash-es/_arrayLikeKeys.js","../node_modules/lodash-es/_isPrototype.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/_nativeKeys.js","../node_modules/lodash-es/_baseKeys.js","../node_modules/lodash-es/isArrayLike.js","../node_modules/lodash-es/keys.js","../node_modules/lodash-es/_getAllKeys.js","../node_modules/lodash-es/_equalObjects.js","../node_modules/lodash-es/_DataView.js","../node_modules/lodash-es/_Promise.js","../node_modules/lodash-es/_Set.js","../node_modules/lodash-es/_WeakMap.js","../node_modules/lodash-es/_getTag.js","../node_modules/lodash-es/_baseIsEqualDeep.js","../node_modules/lodash-es/_baseIsEqual.js","../node_modules/lodash-es/isEqual.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/pkcs7/dist/pkcs7.es.js","../node_modules/aes-decrypter/dist/aes-decrypter.es.js","../node_modules/video.js/dist/video.es.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/is-function/index.js","../node_modules/parse-headers/parse-headers.js","../node_modules/string.prototype.trim/index.js","../node_modules/function-bind/implementation.js","../node_modules/object-keys/index.js","../node_modules/object-keys/implementation.js","../node_modules/es-abstract/es5.js","../node_modules/es-abstract/helpers/assertRecord.js","../node_modules/es-abstract/helpers/isNaN.js","../node_modules/es-abstract/helpers/isFinite.js","../node_modules/es-abstract/helpers/sign.js","../node_modules/es-abstract/helpers/mod.js","../node_modules/es-to-primitive/es5.js","../node_modules/es-to-primitive/helpers/isPrimitive.js","../node_modules/string.prototype.trim/shim.js","../node_modules/for-each/index.js","../node_modules/xtend/immutable.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/mux.js/lib/utils/bin.js","../node_modules/mux.js/lib/mp4/frame-utils.js","../node_modules/mux.js/lib/mp4/audio-frame-utils.js","../node_modules/mux.js/lib/data/silence.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/mp4/track-decode-info.js","../node_modules/mux.js/lib/m2ts/m2ts.js","../node_modules/mux.js/lib/m2ts/metadata-stream.js","../node_modules/mux.js/lib/codecs/adts.js","../node_modules/mux.js/lib/codecs/h264.js","../node_modules/mux.js/lib/utils/exp-golomb.js","../node_modules/mux.js/lib/aac/index.js","../node_modules/mux.js/lib/mp4/caption-parser.js","../node_modules/mux.js/lib/tools/mp4-inspector.js","../node_modules/mux.js/lib/m2ts/probe.js"],"names":["global","win","window","self","module","exports","doccy","topLevel","minDoc","__webpack_require__","document","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","String","codes","toLowerCase","aliases","length","charCodeAt","isEventKey","event","nameOrCode","undefined","code","backspace","tab","enter","shift","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","end","home","left","up","right","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","i","fromCharCode","title","alias","_freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__","freeSelf","Object","root","Function","__webpack_exports__","Stream","this","init","listeners","on","type","listener","concat","off","index","indexOf","slice","splice","trigger","callbacks","args","arguments","call","push","apply","dispose","prototype","pipe","destination","data","flushSource","flush","_findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","path","size","subresults","results","byteLength","subarray","buffer","result","reduce","trak","tkhd","version","id","mdhd","fragment","trafs","baseTimes","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","traks","videoTrackIds","forEach","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","findBox","g","e","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","_root_js__WEBPACK_IMPORTED_MODULE_0__","_stubFalse_js__WEBPACK_IMPORTED_MODULE_1__","freeExports","nodeType","freeModule","Buffer","isBuffer","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","_objectSpread","target","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","d","freeGlobal","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","clean","s","replace","sa","implementation","bind","fnToStr","toString","constructorRegex","isES6ClassFn","fnStr","test","toStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","mp4","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","AacStream","isLikelyAacData","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","a","b","generateVideoSegmentTimingInfo","baseMediaDecodeTime","startDts","startPts","endDts","endPts","prependedContentDuration","start","dts","pts","track","options","adtsFrames","sequenceNumber","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","collectDtsInfo","prop","setEarliestDts","earliestDts","timelineStartInfo","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","frames","moof","mdat","boxes","trimAdtsFramesByEarliestDts","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","prefixWithSilence","samples","generateSampleTable","concatenateFrameData","Uint8Array","set","clearDtsInfo","config","pps","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","nalUnitType","sps","gopForFusion","gops","firstGop","lastGop","resetStream_","groupNalsIntoFrames","groupFramesIntoGops","keyFrame","getGopForFusion_","duration","unshift","nalCount","extendFirstKeyFrame","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","concatenateNalData","dtsDistance","nearestGopObj","currentGop","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","text","audioTrack","caption","id3","initSegment","offset","captions","captionStreams","info","timelineStartPts","endTime","stream","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","MetadataStream","aacStream","audioTimestampRolloverStream","TimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","frame","setTimestamp","timeStamp","audioSegmentStream","codec","setupTsPipeline","packetStream","TransportPacketStream","parseStream","TransportParseStream","elementaryStream","ElementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","CaptionStream","tracks","videoSegmentStream","setBaseMediaDecodeTime","discontinuity","reset","isAac","resetCaptions","Transmuxer","VideoSegmentStream","AudioSegmentStream","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","parseId3TagSize","header","byteIndex","returnSize","parseAdtsSize","lowThree","middle","parseSampleRate","packet","parseAacTimestamp","frameStart","frameSize","unescape","bytes","percentEncode","isFunction","parseHeaders","xtend","initParams","uri","callback","params","createXHR","_createXHR","Error","called","response","body","getBody","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","method","headers","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","setRequestHeader","hasOwnProperty","isEmpty","beforeSend","send","array","forEachArray","toUpperCase","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","trim","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","exec","builtParts","query","baseURLPath","newPath","substring","lastIndexOf","parts","split","reverse","join","parseUTCTiming","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","n","isObject","merge","_len","objects","_key","flatten","lists","x","y","from","list","mergeDiscontiguousPlaylists","playlists","o","acc","playlist","_acc$name$segments","name","attributes","lang","segments","contentProtection","k","l","discontinuityStarts","formatAudioPlaylist","_ref","_attributes","NAME","BANDWIDTH","bandwidth","CODECS","codecs","endList","timeline","periodIndex","resolvedUri","targetDuration","mediaSequence","number","formatVttPlaylist","_ref2","_attributes2","baseUrl","sourceDuration","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","RESOLUTION","width","height","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","minimumUpdatePeriod","videoPlaylists","_ref4","mimeType","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","master","allowCache","mediaGroups","VIDEO","audio","role","language","label","autoselect","default","subs","organizeVttPlaylists","urlToolkit","fn","resolveUrl","relativeUrl","location","href","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","ranges","startRange","parseInt","endRange","byterange","getLiveRValue","time","NOW","clientOffset","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","ceil","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","r","segmentTime","t","count","nextS","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","max","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","values","match","identifier","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","segment","Number","Time","errors","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentTimeInfo","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","base","_segmentAttributes","_segmentAttributes$ti","findChildren","element","childNodes","tagName","getContent","textContent","parseDuration","str","_match$slice","year","month","day","hour","minute","second","parseFloat","parsers","mediaPresentationDuration","Date","parsedValue","isNaN","DEFAULT","parseAttributes","el","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","reference","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","tag","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","node","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","attrs","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","getElementsByTagName","UTCTimingNode","parseUTCTimingScheme","freeProcess","process","nodeUtil","types","require","binding","propIsEnumerable","propertyIsEnumerable","assign","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","symbols","to","val","toObject","hasSymbols","origDefineProperty","supportsDescriptors","_","arePropertyDescriptorsSupported","object","predicate","defineProperties","predicates","props","isArgs","callee","ES","leftWhitespace","rightWhitespace","ToString","CheckObjectCoercible","ThrowTypeError","get","getProto","getPrototypeOf","__proto__","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","ArrayBuffer","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","entries","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","Boolean","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","decodeURIComponent","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","encodeURIComponent","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","Map","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","Promise","$ %PromisePrototype%","$ %PromiseProto_then%","then","$ %Promise_all%","all","$ %Promise_reject%","reject","$ %Promise_resolve%","resolve","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","ReferenceError","$ %ReferenceErrorPrototype%","$ %Reflect%","Reflect","$ %RegExp%","RegExp","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","SyntaxError","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","Uint16Array","$ %Uint16ArrayPrototype%","$ %Uint32Array%","Uint32Array","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","box","dinf","esds","ftyp","mfhd","minf","moov","mvex","mvhd","mdia","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","video","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","trackFragments","flags","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","fileType","movie","cea708Parser","captionPackets_","ccStreams_","Cea608Stream","cc","sei","userData","newCaptionPackets","parseSei","escapedRBSP","payloadType","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","latestDts_","ignoreNextEqualDts_","numSameDts_","parseCaptionPackets","elem","idx","presortIndex","sort","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","ccData","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","name_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","content","console","error","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","popOn","baseRow","rollUp","paintOn","payloadSize","discardEmulationPreventionBytes","newLength","newData","emulationPreventionBytesPositions","sourceIndex","handleRollover","direction","abs","lastDTS","referenceDTS","type_","originalModule","webpackPolyfill","create","children","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","reviver","generator","probe","CaptionParser","StreamTypes","ts","aac","parseAudioPes_","pmt","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","pes","currentFrame","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","inspect","baseTimestamp","audioCount","sampleRate","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","_listCacheClear","__data__","lodash_es_eq","other","_assocIndexOf","_listCacheDelete","_listCacheGet","_listCacheHas","_listCacheSet","ListCache","clear","entry","has","_ListCache","_stackClear","_stackDelete","_stackGet","_stackHas","_Symbol","_root","objectProto","_getRawTag_hasOwnProperty","nativeObjectToString","symToStringTag","_getRawTag","isOwn","unmasked","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","_baseGetTag","lodash_es_isObject","asyncTag","funcTag","genTag","proxyTag","lodash_es_isFunction","_coreJsData","maskSrcKey","uid","IE_PROTO","_isMasked","func","funcToString","_toSource","reIsHostCtor","_baseIsNative_funcProto","_baseIsNative_objectProto","_baseIsNative_funcToString","_baseIsNative_hasOwnProperty","reIsNative","_baseIsNative","_getValue","_getNative","_Map","_nativeCreate","_hashClear","_hashDelete","HASH_UNDEFINED","_hashGet_hasOwnProperty","_hashGet","_hashHas_hasOwnProperty","_hashHas","_hashSet_HASH_UNDEFINED","_hashSet","Hash","_Hash","_mapCacheClear","hash","string","_isKeyable","_getMapData","_mapCacheDelete","_mapCacheGet","_mapCacheHas","_mapCacheSet","MapCache","_MapCache","LARGE_ARRAY_SIZE","_stackSet","pairs","Stack","_Stack","_setCacheAdd_HASH_UNDEFINED","_setCacheAdd","_setCacheHas","SetCache","add","_SetCache","_arraySome","_cacheHas","cache","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","_equalArrays","bitmask","customizer","equalFunc","stack","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","_Uint8Array","_mapToArray","_setToArray","_equalByTag_COMPARE_PARTIAL_FLAG","_equalByTag_COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","_equalByTag","message","convert","_arrayPush","lodash_es_isArray","_baseGetAllKeys","keysFunc","symbolsFunc","_arrayFilter","resIndex","lodash_es_stubArray","nativeGetSymbols","_getSymbols","symbol","_baseTimes","iteratee","lodash_es_isObjectLike","argsTag","_baseIsArguments","isArguments_objectProto","isArguments_hasOwnProperty","isArguments_propertyIsEnumerable","lodash_es_isArguments","MAX_SAFE_INTEGER","reIsUint","_isIndex","isLength_MAX_SAFE_INTEGER","lodash_es_isLength","typedArrayTags","_baseIsTypedArray","_baseUnary","nodeIsTypedArray","_nodeUtil","isTypedArray","lodash_es_isTypedArray","_arrayLikeKeys_hasOwnProperty","_arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","_isPrototype_objectProto","_isPrototype","Ctor","constructor","_nativeKeys","transform","arg","_overArg","_baseKeys_hasOwnProperty","_baseKeys","lodash_es_isArrayLike","lodash_es_keys","_getAllKeys","_equalObjects_COMPARE_PARTIAL_FLAG","_equalObjects_hasOwnProperty","_equalObjects","objProps","objLength","skipCtor","objValue","objCtor","othCtor","_DataView","_Promise","_Set","_WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","_getTag_getTag","ctorString","_getTag","_baseIsEqualDeep_COMPARE_PARTIAL_FLAG","_baseIsEqualDeep_argsTag","_baseIsEqualDeep_arrayTag","_baseIsEqualDeep_objectTag","_baseIsEqualDeep_hasOwnProperty","_baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","_baseIsEqual","baseIsEqual","_extends","_inheritsLoose","subClass","superClass","_assertThisInitialized","_proto","LineStream","_Stream","_this","nextNewline","attr","ParseStream","customParsers","tagMappers","line","_this2","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_this3","expression","customType","dataParser","addTagMapper","Parser","lineStream","currentMap","uris","currentUri","defaultMediaGroups","CLOSED-CAPTIONS","currentTimeline","manifest","mediaGroup","rendition","allow-cache","endlist","inf","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","program-date-time","targetduration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","comment","custom","chunk","classCallCheck","instance","Constructor","createClass","descriptor","protoProps","staticProps","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","j","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","c","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","AsyncStream","jobs","delay","timeout_","setPrototypeOf","inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","step","STEP","asyncStream_","decryptChunk_","padded","video_es_version","video_es_inheritsLoose","_setPrototypeOf","p","_construct","Parent","Class","construct","sham","isNativeReflectConstruct","video_es_assertThisInitialized","_taggedTemplateLiteralLoose","strings","raw","video_es_history","video_es_LogByTypeFactory","log","level","lvl","levels","lvlRegExp","window_default","video_es_log","createLogger","logByType","subname","debug","warn","history","fname","historyItem","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","each","video_es_assign","sources","isPlain","video_es_computedStyle","getComputedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","isReal","document_default","isEl","isInFrame","parent","createQuerier","selector","context","querySelector","ctx","createEl","properties","createElement","propName","tsml_default","setAttribute","attrName","appendContent","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","classToCheck","classList","contains","className","addClass","classToAdd","removeClass","classToRemove","remove","toggleClass","classToToggle","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","findPosition","top","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","_supportsPassive","addEventListener","passiveEvents","guid","handlersCopy","m","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","EVENT_MAP","video_es_createStyleElement","style","setTextContent","styleSheet","cssText","bound","throttle","last","video_es_debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","oldTimeout","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","state","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","charAt","mergeOptions","video_es_Component","Component","ready","play","player_","parentComponent_","options_","id_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","navigator","userAgent","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","apiMap","specApi","prefixedAPI","video_es_i","dist_video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","cues","cue","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","keycode_default","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","div","addToBody","host","protocol","innerHTML","details","video_es_getAbsoluteURL","getFileExtension","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","video_es_loadTrack","crossOrigin","xhr_default","responseBody","loaded_","tech_","loadHandler","errorHandler","video_es_TextTrack","_Track","TextTrack","settings","srclang","mode","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mov","m4v","mkv","mp3","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","h","gm","gh","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","item","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyPress","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundHandleKeyPress_","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","catch","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","fsApi","fullscreenElement","matches","fullscreen","inactivityTimeout","defaultPlaybackRate","set$1","reduceRight","video_es_get","_this8","PromiseClass","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","hotkeys","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits$1","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","video_es_resolveUrl","url_toolkit_default","resolveManifestRedirect","handleManifestRedirect","req","responseURL","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","xhr$$1","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","intervalDuration","endSequence","expired","backward","forward","backwardDuration","forwardDuration","video_es_duration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","mp4Generator","toUnsigned$1","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","sampleForFrame","dataOffset","currentNal","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$1","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","maxSegmentDts","maxSegmentPts","captionPacketParser","streamTypes","_MetadataStream","timestampRolloverStream","parseUtf8","tagParsers","TXXX","WXXX","PRIV","owner","tagSize","bufferSize","dataAlignmentIndicator","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","streamType","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","ptsDtsFlags","packetLength","parsePes","PAT_PID","MP2T_PACKET_LENGTH","_AdtsStream","m2ts_1","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","NalByteStream","bytesLeft","tempLength","isLikelyAacData$1","inspectMp4","_textifyMp","transmuxer","parseType$2","parseMp4Date","parseSampleFlags","nalParse","avcStream","avcView","parse$$1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","nals","modificationTime","streamDescriptor","matrix","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","mp4Inspector","ab","z","textify","inspectedMp4","indent","prefix","_byte","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","decode","presentation","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","playlistUpdate","group","_playlistUpdate","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","mediaRequest_","mpd_parser_es","masterXml_","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","updatedMaster","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","Range","byterangeEnd","byterangeStr","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decryptSegment","handleProgress","progressFn","stats","progressEvent","loaded","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onError","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","renditionSelectionMixin","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","for","u","w","aa","ba","A","B","f","framesToPop","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","refs","updater","F","G","isReactComponent","forceUpdate","H","isPureReactComponent","I","current","J","K","L","ref","__self","__source","M","defaultProps","$$typeof","_owner","N","O","P","Q","keyPrefix","R","U","T",":","ea","fa","V","da","W","X","Children","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","Z","ha","ia","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","dependencies","ta","ua","va","wa","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","animation","transition","Xa","Ya","Za","$a","bb","db","eb","fb","gb","nativeEvent","Interface","isDefaultPrevented","ib","eventPool","jb","destructor","hb","getPooled","persist","eventPhase","cancelable","isTrusted","kb","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","vb","detail","wb","zb","locale","xb","ctrlKey","altKey","metaKey","char","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","datetime","datetime-local","email","tel","week","Mb","Nb","correspondingUseElement","Ob","Pb","Rb","_valueTracker","getValue","setValue","Qb","Sb","checked","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","dc","ec","fc","gc","hc","ic","displayName","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","tc","pc","qc","oc","setAttributeNS","uc","vc","defaultChecked","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","sibling","gd","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","119","120","121","144","145","224","od","pd","dataTransfer","qd","targetTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","Ld","Nd","Od","contentEditable","Qd","focusedElem","selectionRange","Md","compareDocumentPosition","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","ge","he","ie","je","namespaceURI","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","pe","menuitem","area","br","col","embed","hr","img","input","keygen","link","meta","param","wbr","qe","re","is","se","te","ue","ve","we","autoFocus","xe","__html","ye","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Fe","Ge","He","Ie","Je","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","cf","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","contextType","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","zf","Af","_stringRef","Bf","Cf","Df","Ef","Ff","Gf","Hf","If","Jf","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","baseUpdate","ng","og","pg","lastRenderedReducer","dispatch","qg","lastRenderedState","eagerReducer","eagerState","rg","destroy","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hf","We","hydrate","first","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","hh","ih","jh","kh","lh","mh","nh","oh","onClick","onclick","ph","qh","rh","vh","componentWillUnmount","wh","xh","yh","_reactRootContainer","zh","wasMultiple","multiple","Ce","display","uh","hi","Xh","Bh","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","ni","oi","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","Ri","Ti","Mi","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","findFiberByHostInstance","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","_r","previous","priorityLevel","_schedMock","MessageChannel","port2","port1","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","alert","confirm","prompt","define","getPolyfill","boundTrim","that","boundLength","boundArgs","Empty","origKeys","keysShim","originalKeys","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","GetIntrinsic","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","Type","IsPropertyDescriptor","Desc","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","setter","$SyntaxError","Property Descriptor","recordType","argumentName","modulo","remain","isPrimitive","isCallable","ES5internalSlots","actualHint","polyfill","thisArg","len","forEachString","forEachObject","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","substr","region","vals","vals0","integer","lineAlign","snapToLines","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","offsetTop","rects","getClientRects","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","convertCueToDOMTree","cuetext","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","pos","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","getCueAsHTML","scrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","ONE_SECOND_IN_TS","m2tsStreamTypes","ExpGolomb","aacUtils","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame"],"mappings":"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","file":"static/js/2.80d8aa1b.chunk.js","sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n  win = window;\n} else if (typeof global !== \"undefined\") {\n  win = global;\n} else if (typeof self !== \"undefined\") {\n  win = self;\n} else {\n  win = {};\n}\n\nmodule.exports = win;","var topLevel = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {};\n\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n  doccy = document;\n} else {\n  doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n  if (!doccy) {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n  }\n}\n\nmodule.exports = doccy;","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n    if (hasKeyCode) searchInput = hasKeyCode;\n  } // Numbers\n\n\n  if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n  var search = String(searchInput); // check codes\n\n  var foundNamedKey = codes[search.toLowerCase()];\n  if (foundNamedKey) return foundNamedKey; // check aliases\n\n  var foundNamedKey = aliases[search.toLowerCase()];\n  if (foundNamedKey) return foundNamedKey; // weird character?\n\n  if (search.length === 1) return search.charCodeAt(0);\n  return undefined;\n}\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\n\n\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode;\n\n    if (keyCode === null || keyCode === undefined) {\n      return false;\n    }\n\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n      if (foundNamedKey) {\n        return foundNamedKey === keyCode;\n      } // check aliases\n\n\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n      if (foundNamedKey) {\n        return foundNamedKey === keyCode;\n      }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n\n    return false;\n  }\n};\n\nexports = module.exports = keyCode;\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222 // Helper aliases\n\n};\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n  /*!\n   * Programatically add the following\n   */\n  // lower case chars\n\n};\n\nfor (i = 97; i < 123; i++) {\n  codes[String.fromCharCode(i)] = i - 32;\n} // numbers\n\n\nfor (var i = 48; i < 58; i++) {\n  codes[i - 48] = i;\n} // function keys\n\n\nfor (i = 1; i < 13; i++) {\n  codes['f' + i] = i + 111;\n} // numpad keys\n\n\nfor (i = 0; i < 10; i++) {\n  codes['numpad ' + i] = i + 96;\n}\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\n\nvar names = exports.names = exports.title = {}; // title for backward compat\n// Create reverse mapping\n\nfor (i in codes) {\n  names[codes[i]] = i;\n} // Add aliases\n\n\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias];\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","import freeGlobal from './_freeGlobal.js';\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nexport default root;","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function Stream() {\n  this.init = function () {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    this.on = function (type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n\n\n    this.off = function (type, listener) {\n      var index;\n\n      if (!listeners[type]) {\n        return false;\n      }\n\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n\n\n    this.trigger = function (type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n\n    this.dispose = function () {\n      listeners = {};\n    };\n  };\n};\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\n\n\nStream.prototype.pipe = function (destination) {\n  this.on('data', function (data) {\n    destination.push(data);\n  });\n  this.on('done', function (flushSource) {\n    destination.flush(flushSource);\n  });\n  return destination;\n}; // Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\n\n\nStream.prototype.push = function (data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function (flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\n\nvar _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n_findBox = function findBox(data, path) {\n  var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size = toUnsigned(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of data\n\n\n  return results;\n};\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\n\n\nparseType = function parseType(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\n\n\ntimescale = function timescale(init) {\n  var result = {},\n      traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n  return traks.reduce(function (result, trak) {\n    var tkhd, version, index, id, mdhd;\n    tkhd = _findBox(trak, ['tkhd'])[0];\n\n    if (!tkhd) {\n      return null;\n    }\n\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n    mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (!mdhd) {\n      return null;\n    }\n\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    return result;\n  }, result);\n};\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\n\n\nstartTime = function startTime(timescale, fragment) {\n  var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n  trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n  baseTimes = [].concat.apply([], trafs.map(function (traf) {\n    return _findBox(traf, ['tfhd']).map(function (tfhd) {\n      var id, scale, baseTime; // get the track id from the tfhd\n\n      id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n        var version, result;\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n        if (version === 1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n        }\n\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity; // convert base time to seconds\n\n      return baseTime / scale;\n    });\n  })); // return the minimum\n\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\n\n\ngetVideoTrackIds = function getVideoTrackIds(init) {\n  var traks = _findBox(init, ['moov', 'trak']);\n\n  var videoTrackIds = [];\n  traks.forEach(function (trak) {\n    var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n    var tkhds = _findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function (hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: _findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n/** Detect free variable `exports`. */\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nexport default isBuffer;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nexport default freeGlobal;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","function clean(s) {\n  return s.replace(/\\n\\r?\\s*/g, '');\n}\n\nmodule.exports = function tsml(sa) {\n  var s = '',\n      i = 0;\n\n  for (; i < arguments.length; i++) {\n    s += clean(sa[i]) + (arguments[i + 1] || '');\n  }\n\n  return s;\n};","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar constructorRegex = /^\\s*class\\b/;\n\nvar isES6ClassFn = function isES6ClassFunction(value) {\n  try {\n    var fnStr = fnToStr.call(value);\n    return constructorRegex.test(fnStr);\n  } catch (e) {\n    return false; // not a function\n  }\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n  try {\n    if (isES6ClassFn(value)) {\n      return false;\n    }\n\n    fnToStr.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (typeof value !== 'function' && typeof value !== 'object') {\n    return false;\n  }\n\n  if (typeof value === 'function' && !value.prototype) {\n    return true;\n  }\n\n  if (hasToStringTag) {\n    return tryFunctionObject(value);\n  }\n\n  if (isES6ClassFn(value)) {\n    return false;\n  }\n\n  var strClass = toStr.call(value);\n  return strClass === fnClass || strClass === genClass;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar mp4 = require('./mp4-generator.js');\n\nvar frameUtils = require('./frame-utils');\n\nvar audioFrameUtils = require('./audio-frame-utils');\n\nvar trackDecodeInfo = require('./track-decode-info');\n\nvar m2ts = require('../m2ts/m2ts.js');\n\nvar AdtsStream = require('../codecs/adts.js');\n\nvar H264Stream = require('../codecs/h264').H264Stream;\n\nvar AacStream = require('../aac');\n\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData; // constants\n\n\nvar AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\nvar VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\nvar _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n/**\n * Compare two arrays (even typed) for same-ness\n */\n\n\nvar arrayEquals = function arrayEquals(a, b) {\n  var i;\n\n  if (a.length !== b.length) {\n    return false;\n  } // compare the value of each element in the array\n\n\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n  var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\n_AudioSegmentStream = function AudioSegmentStream(track, options) {\n  var adtsFrames = [],\n      sequenceNumber = 0,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n  options = options || {};\n\n  _AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function (data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        track[prop] = data[prop];\n      });\n    } // buffer audio data until end() is called\n\n\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function (earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function () {\n    var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n\n    track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n    adtsFrames = [];\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    trackDecodeInfo.clearDtsInfo(track);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\n_AudioSegmentStream.prototype = new Stream();\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n_VideoSegmentStream = function VideoSegmentStream(track, options) {\n  var sequenceNumber = 0,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n  options = options || {};\n\n  _VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n  this.gopCache_ = [];\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n\n  this.push = function (nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    } // buffer video until flush() is called\n\n\n    nalUnits.push(nalUnit);\n  };\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n\n\n  this.flush = function () {\n    var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n\n      nalUnits.shift();\n    } // Return early if no video data has been observed\n\n\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    } // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n\n\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n        gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    } // Trim gops to align with gopsToAlignWith\n\n\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n\n\n      trackDecodeInfo.clearDtsInfo(track);\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n\n    track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    this.trigger('processedGopsInfo', gops.map(function (gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n    this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    }); // Keep a maximum of 6 GOPs in the cache\n\n    this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n    nalUnits = [];\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n    moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.resetStream_(); // Continue with the flush process now\n\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function () {\n    trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n\n    config = undefined;\n    pps = undefined;\n  }; // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n\n\n  this.getGopForFusion_ = function (nalUnit) {\n    var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n    allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n    nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      } // The distance between the end of the gop and the start of the nalUnit\n\n\n      dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n\n      if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj || nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n\n    return null;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n\n\n  this.alignGopsAtStart_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      } // current gop starts before the current gop we want to align on. so increment gop\n      // index\n\n\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n\n\n  this.alignGopsAtEnd_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function (total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, {\n      byteLength: 0,\n      duration: 0,\n      nalCount: 0\n    });\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function (newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\n_VideoSegmentStream.prototype = new Stream();\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\n\n_CoalesceStream = function CoalesceStream(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n  this.push = function (output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    } // buffer incoming id3 tags until the final flush\n\n\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    } // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n\n\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\n_CoalesceStream.prototype = new Stream();\n\n_CoalesceStream.prototype.flush = function (flushSource) {\n  var offset = 0,\n      event = {\n    captions: [],\n    captionStreams: {},\n    metadata: [],\n    info: {}\n  },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n  initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n  event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n  // and track definitions\n\n  event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n  event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  } // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n\n\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = caption.startPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n\n    caption.startTime /= 90e3;\n    caption.endTime = caption.endPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  } // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n\n\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = id3.pts;\n\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  } // We add this to every single emitted segment even though we only need\n  // it for the first\n\n\n  event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0; // Emit the built segment\n\n  this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\n\n\n_Transmuxer = function Transmuxer(options) {\n  var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n\n  _Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n    pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n    pipeline.metadataStream.on('timestamp', function (frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n    pipeline.aacStream.on('data', function (data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n    pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n\n    pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n    pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n    pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n    pipeline.elementaryStream.on('data', function (data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length; // scan the tracks listed in the metadata\n\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        } // hook up the video segment stream to the first track with h264 data\n\n\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n          pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n            // When video emits timelineStartInfo data after a flush, we forward that\n            // info to the AudioSegmentStream, if it exists, because video timeline\n            // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n          pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          }); // Set up the final part of the video pipeline\n\n          pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n        }\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  }; // hook up the segment streams once track metadata is delivered\n\n\n  this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function (gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  }; // feed incoming data to the front of the parsing pipeline\n\n\n  this.push = function (data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n\n      hasFlushed = false;\n    }\n\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  }; // flush any buffered data\n\n\n  this.flush = function () {\n    hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n    this.transmuxPipeline_.headOfPipeline.flush();\n  }; // Caption data has to be reset when seeking outside buffered range\n\n\n  this.resetCaptions = function () {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n};\n\n_Transmuxer.prototype = new Stream();\nmodule.exports = {\n  Transmuxer: _Transmuxer,\n  VideoSegmentStream: _VideoSegmentStream,\n  AudioSegmentStream: _AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\nvar isLikelyAacData = function isLikelyAacData(data) {\n  if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n    return true;\n  }\n\n  return false;\n};\n\nvar parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n}; // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\nvar percentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n}; // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\n\n\nvar parseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n  var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n  var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n  return highTwo | middle | lowThree;\n};\n\nvar parseType = function parseType(header, byteIndex) {\n  if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n    return 'timed-metadata';\n  } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n    return 'audio';\n  }\n\n  return null;\n};\n\nvar parseSampleRate = function parseSampleRate(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function parseAacTimestamp(packet) {\n  var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n  frameStart = 10;\n\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  } // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n    if (frameSize < 1) {\n      return null;\n    }\n\n    frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            return size;\n          }\n\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar isFunction = require(\"is-function\");\n\nvar parseHeaders = require(\"parse-headers\");\n\nvar xtend = require(\"xtend\");\n\nmodule.exports = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = xtend(options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  if (xhr.responseType === \"document\") {\n    return xhr.responseXML;\n  }\n\n  var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n  if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n    return xhr.responseXML;\n  }\n\n  return null;\n}\n\nfunction noop() {}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function () {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function () {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function (root) {\n  /* jshint ignore:end */\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n  var URLToolkit = {\n    // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n      opts = opts || {}; // remove any remaining space and CRLF\n\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n\n      var baseParts = URLToolkit.parseURL(baseURL);\n\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function parseURL(url) {\n      var parts = URL_REGEX.exec(url);\n\n      if (!parts) {\n        return null;\n      }\n\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function normalizePath(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function buildURLFromParts(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n  /* jshint ignore:start */\n\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = URLToolkit;else if (typeof define === 'function' && define.amd) define([], function () {\n    return URLToolkit;\n  });else if (typeof exports === 'object') exports[\"URLToolkit\"] = URLToolkit;else root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */","/*! @name mpd-parser @version 0.7.0 @license Apache-2.0 */\nimport window$1 from 'global/window';\nvar version = \"0.7.0\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n      playlist.segments[0].discontinuity = true;\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + \" (\" + role + \")\";\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n  // see https://tools.ietf.org/html/rfc1808\n\n  /* jshint ignore:start */\n  (function (root) {\n    /* jshint ignore:end */\n    var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n    var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n    var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n    var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n    var URLToolkit = {\n      // jshint ignore:line\n      // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n      // E.g\n      // With opts.alwaysNormalize = false (default, spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n      // With opts.alwaysNormalize = true (not spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n      buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n        opts = opts || {}; // remove any remaining space and CRLF\n\n        baseURL = baseURL.trim();\n        relativeURL = relativeURL.trim();\n\n        if (!relativeURL) {\n          // 2a) If the embedded URL is entirely empty, it inherits the\n          // entire base URL (i.e., is set equal to the base URL)\n          // and we are done.\n          if (!opts.alwaysNormalize) {\n            return baseURL;\n          }\n\n          var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n          if (!basePartsForNormalise) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n          return URLToolkit.buildURLFromParts(basePartsForNormalise);\n        }\n\n        var relativeParts = URLToolkit.parseURL(relativeURL);\n\n        if (!relativeParts) {\n          throw new Error('Error trying to parse relative URL.');\n        }\n\n        if (relativeParts.scheme) {\n          // 2b) If the embedded URL starts with a scheme name, it is\n          // interpreted as an absolute URL and we are done.\n          if (!opts.alwaysNormalize) {\n            return relativeURL;\n          }\n\n          relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n          return URLToolkit.buildURLFromParts(relativeParts);\n        }\n\n        var baseParts = URLToolkit.parseURL(baseURL);\n\n        if (!baseParts) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n          // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n          // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n          var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n          baseParts.netLoc = pathParts[1];\n          baseParts.path = pathParts[2];\n        }\n\n        if (baseParts.netLoc && !baseParts.path) {\n          baseParts.path = '/';\n        }\n\n        var builtParts = {\n          // 2c) Otherwise, the embedded URL inherits the scheme of\n          // the base URL.\n          scheme: baseParts.scheme,\n          netLoc: relativeParts.netLoc,\n          path: null,\n          params: relativeParts.params,\n          query: relativeParts.query,\n          fragment: relativeParts.fragment\n        };\n\n        if (!relativeParts.netLoc) {\n          // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n          // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n          // (if any) of the base URL.\n          builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n          // path is not relative and we skip to Step 7.\n\n          if (relativeParts.path[0] !== '/') {\n            if (!relativeParts.path) {\n              // 5) If the embedded URL path is empty (and not preceded by a\n              // slash), then the embedded URL inherits the base URL path\n              builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <params> of the base\n              // URL (if any) and\n\n              if (!relativeParts.params) {\n                builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <query> of the base\n                // URL (if any) and we skip to step 7.\n\n                if (!relativeParts.query) {\n                  builtParts.query = baseParts.query;\n                }\n              }\n            } else {\n              // 6) The last segment of the base URL's path (anything\n              // following the rightmost slash \"/\", or the entire path if no\n              // slash is present) is removed and the embedded URL's path is\n              // appended in its place.\n              var baseURLPath = baseParts.path;\n              var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n              builtParts.path = URLToolkit.normalizePath(newPath);\n            }\n          }\n        }\n\n        if (builtParts.path === null) {\n          builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n        }\n\n        return URLToolkit.buildURLFromParts(builtParts);\n      },\n      parseURL: function parseURL(url) {\n        var parts = URL_REGEX.exec(url);\n\n        if (!parts) {\n          return null;\n        }\n\n        return {\n          scheme: parts[1] || '',\n          netLoc: parts[2] || '',\n          path: parts[3] || '',\n          params: parts[4] || '',\n          query: parts[5] || '',\n          fragment: parts[6] || ''\n        };\n      },\n      normalizePath: function normalizePath(path) {\n        // The following operations are\n        // then applied, in order, to the new path:\n        // 6a) All occurrences of \"./\", where \".\" is a complete path\n        // segment, are removed.\n        // 6b) If the path ends with \".\" as a complete path segment,\n        // that \".\" is removed.\n        path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n        // complete path segment not equal to \"..\", are removed.\n        // Removal of these path segments is performed iteratively,\n        // removing the leftmost matching pattern on each iteration,\n        // until no matching pattern remains.\n        // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n        // complete path segment not equal to \"..\", that\n        // \"<segment>/..\" is removed.\n\n        while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n        return path.split('').reverse().join('');\n      },\n      buildURLFromParts: function buildURLFromParts(parts) {\n        return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n      }\n    };\n    /* jshint ignore:start */\n\n    module.exports = URLToolkit;\n  })(commonjsGlobal);\n  /* jshint ignore:end */\n\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range;\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\n\n\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    range: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return {\n      attributes: attributes\n    };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };","import freeGlobal from './_freeGlobal.js';\n/** Detect free variable `exports`. */\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nexport default nodeUtil;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","'use strict';\n\nvar keys = require('object-keys');\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function isFunction(fn) {\n  return typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {\n  var obj = {};\n\n  try {\n    origDefineProperty(obj, 'x', {\n      enumerable: false,\n      value: obj\n    }); // eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\n    for (var _ in obj) {\n      // jscs:ignore disallowUnusedVariables\n      return false;\n    }\n\n    return obj.x === obj;\n  } catch (e) {\n    /* this is IE 8. */\n    return false;\n  }\n};\n\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function defineProperty(object, name, value, predicate) {\n  if (name in object && (!isFunction(predicate) || !predicate())) {\n    return;\n  }\n\n  if (supportsDescriptors) {\n    origDefineProperty(object, name, {\n      configurable: true,\n      enumerable: false,\n      value: value,\n      writable: true\n    });\n  } else {\n    object[name] = value;\n  }\n};\n\nvar defineProperties = function defineProperties(object, map) {\n  var predicates = arguments.length > 2 ? arguments[2] : {};\n  var props = keys(map);\n\n  if (hasSymbols) {\n    props = concat.call(props, Object.getOwnPropertySymbols(map));\n  }\n\n  for (var i = 0; i < props.length; i += 1) {\n    defineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n  }\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\nmodule.exports = defineProperties;","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n  var str = toStr.call(value);\n  var isArgs = str === '[object Arguments]';\n\n  if (!isArgs) {\n    isArgs = str !== '[object Array]' && value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';\n  }\n\n  return isArgs;\n};","'use strict';\n\nvar bind = require('function-bind');\n\nvar ES = require('es-abstract/es5');\n\nvar replace = bind.call(Function.call, String.prototype.replace);\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n  var S = ES.ToString(ES.CheckObjectCoercible(this));\n  return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};","'use strict';\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor ? function () {\n  return Object.getOwnPropertyDescriptor(arguments, 'callee').get;\n}() : function () {\n  throw new TypeError();\n};\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) {\n  return x.__proto__;\n}; // eslint-disable-line no-proto\n\n\nvar generator; // = function * () {};\n\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\n\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\n\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\nvar INTRINSICS = {\n  '$ %Array%': Array,\n  '$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n  '$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n  '$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n  '$ %ArrayPrototype%': Array.prototype,\n  '$ %ArrayProto_entries%': Array.prototype.entries,\n  '$ %ArrayProto_forEach%': Array.prototype.forEach,\n  '$ %ArrayProto_keys%': Array.prototype.keys,\n  '$ %ArrayProto_values%': Array.prototype.values,\n  '$ %AsyncFromSyncIteratorPrototype%': undefined,\n  '$ %AsyncFunction%': asyncFunction,\n  '$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n  '$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n  '$ %AsyncGeneratorFunction%': asyncGenFunction,\n  '$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n  '$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n  '$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n  '$ %Boolean%': Boolean,\n  '$ %BooleanPrototype%': Boolean.prototype,\n  '$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n  '$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n  '$ %Date%': Date,\n  '$ %DatePrototype%': Date.prototype,\n  '$ %decodeURI%': decodeURI,\n  '$ %decodeURIComponent%': decodeURIComponent,\n  '$ %encodeURI%': encodeURI,\n  '$ %encodeURIComponent%': encodeURIComponent,\n  '$ %Error%': Error,\n  '$ %ErrorPrototype%': Error.prototype,\n  '$ %eval%': eval,\n  // eslint-disable-line no-eval\n  '$ %EvalError%': EvalError,\n  '$ %EvalErrorPrototype%': EvalError.prototype,\n  '$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n  '$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n  '$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n  '$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n  '$ %Function%': Function,\n  '$ %FunctionPrototype%': Function.prototype,\n  '$ %Generator%': generator ? getProto(generator()) : undefined,\n  '$ %GeneratorFunction%': generatorFunction,\n  '$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n  '$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n  '$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n  '$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n  '$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n  '$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n  '$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n  '$ %isFinite%': isFinite,\n  '$ %isNaN%': isNaN,\n  '$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n  '$ %JSON%': JSON,\n  '$ %JSONParse%': JSON.parse,\n  '$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n  '$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n  '$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n  '$ %Math%': Math,\n  '$ %Number%': Number,\n  '$ %NumberPrototype%': Number.prototype,\n  '$ %Object%': Object,\n  '$ %ObjectPrototype%': Object.prototype,\n  '$ %ObjProto_toString%': Object.prototype.toString,\n  '$ %ObjProto_valueOf%': Object.prototype.valueOf,\n  '$ %parseFloat%': parseFloat,\n  '$ %parseInt%': parseInt,\n  '$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n  '$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n  '$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n  '$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n  '$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n  '$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n  '$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n  '$ %RangeError%': RangeError,\n  '$ %RangeErrorPrototype%': RangeError.prototype,\n  '$ %ReferenceError%': ReferenceError,\n  '$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n  '$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n  '$ %RegExp%': RegExp,\n  '$ %RegExpPrototype%': RegExp.prototype,\n  '$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n  '$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n  '$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n  '$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n  '$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n  '$ %String%': String,\n  '$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n  '$ %StringPrototype%': String.prototype,\n  '$ %Symbol%': hasSymbols ? Symbol : undefined,\n  '$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n  '$ %SyntaxError%': SyntaxError,\n  '$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n  '$ %ThrowTypeError%': ThrowTypeError,\n  '$ %TypedArray%': TypedArray,\n  '$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n  '$ %TypeError%': TypeError,\n  '$ %TypeErrorPrototype%': TypeError.prototype,\n  '$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n  '$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n  '$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n  '$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n  '$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n  '$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n  '$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n  '$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n  '$ %URIError%': URIError,\n  '$ %URIErrorPrototype%': URIError.prototype,\n  '$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n  '$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n  '$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n  '$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n    throw new TypeError('\"allowMissing\" argument must be a boolean');\n  }\n\n  var key = '$ ' + name;\n\n  if (!(key in INTRINSICS)) {\n    throw new SyntaxError('intrinsic ' + name + ' does not exist!');\n  } // istanbul ignore if // hopefully this is impossible to test :-)\n\n\n  if (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n    throw new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n  }\n\n  return INTRINSICS[key];\n};","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = \"\\u200B\";\n\nmodule.exports = function getPolyfill() {\n  if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n    return String.prototype.trim;\n  }\n\n  return implementation;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n(function () {\n  var i;\n  types = {\n    avc1: [],\n    // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [],\n    // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n  AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // entry_count\n  0x00, 0x00, 0x00, 0x0c, // entry_size\n  0x75, 0x72, 0x6c, 0x20, // 'url' type\n  0x00, // version 0\n  0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, // balance, 0 means centered\n  0x00, 0x00 // reserved\n  ]);\n  STCO = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // sample_size\n  0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x01, // flags\n  0x00, 0x00, // graphicsmode\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n  ]);\n})();\n\nbox = function box(type) {\n  var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length; // calculate the total size we need to allocate\n\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4); // copy the payload into the result\n\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n\n  return result;\n};\n\ndinf = function dinf() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function esds(track) {\n  return box(types.esds, new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  // ES_Descriptor\n  0x03, // tag, ES_DescrTag\n  0x19, // length\n  0x00, 0x00, // ES_ID\n  0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n  // DecoderConfigDescriptor\n  0x04, // tag, DecoderConfigDescrTag\n  0x11, // length\n  0x40, // object type\n  0x15, // streamType\n  0x00, 0x06, 0x00, // bufferSizeDB\n  0x00, 0x00, 0xda, 0xc0, // maxBitrate\n  0x00, 0x00, 0xda, 0xc0, // avgBitrate\n  // DecoderSpecificInfo\n  0x05, // tag, DecoderSpecificInfoTag\n  0x02, // length\n  // ISO/IEC 14496-3, AudioSpecificConfig\n  // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n  track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function ftyp() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function hdlr(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\n\nmdat = function mdat(data) {\n  return box(types.mdat, data);\n};\n\nmdhd = function mdhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x02, // creation_time\n  0x00, 0x00, 0x00, 0x03, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n  0x55, 0xc4, // 'und' language (undetermined)\n  0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n\n  if (track.samplerate) {\n    result[12] = track.samplerate >>> 24 & 0xFF;\n    result[13] = track.samplerate >>> 16 & 0xFF;\n    result[14] = track.samplerate >>> 8 & 0xFF;\n    result[15] = track.samplerate & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\n\nmdia = function mdia(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\n\nmfhd = function mfhd(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n  (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n  ]));\n};\n\nminf = function minf(track) {\n  return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n};\n\nmoof = function moof(sequenceNumber, tracks) {\n  var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n\n  return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\n\n\nmoov = function moov(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\n\nmvex = function mvex(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n\n  return box.apply(null, [types.mvex].concat(boxes));\n};\n\nmvhd = function mvhd(duration) {\n  var bytes = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // creation_time\n  0x00, 0x00, 0x00, 0x02, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n  0x00, 0x01, 0x00, 0x00, // 1.0 rate\n  0x01, 0x00, // 1.0 volume\n  0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n  0xff, 0xff, 0xff, 0xff // next_track_ID\n  ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function sdtp(track) {\n  var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n  // write the sample table\n\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n    bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n  }\n\n  return box(types.sdtp, bytes);\n};\n\nstbl = function stbl(track) {\n  return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n};\n\n(function () {\n  var videoSample, audioSample;\n\n  stsd = function stsd(track) {\n    return box(types.stsd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function videoSample(track) {\n    var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i; // assemble the SPSs\n\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    } // assemble the PPSs\n\n\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push(pps[i].byteLength & 0xFF);\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    (track.width & 0xff00) >> 8, track.width & 0xff, // width\n    (track.height & 0xff00) >> 8, track.height & 0xff, // height\n    0x00, 0x48, 0x00, 0x00, // horizresolution\n    0x00, 0x48, 0x00, 0x00, // vertresolution\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // frame_count\n    0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n    0x00, 0x18, // depth = 24\n    0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n    track.profileIdc, // AVCProfileIndication\n    track.profileCompatibility, // profile_compatibility\n    track.levelIdc, // AVCLevelIndication\n    0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n    box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n    0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n    0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n    );\n  };\n\n  audioSample = function audioSample(track) {\n    return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    // AudioSampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n    (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n    // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n})();\n\ntkhd = function tkhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x07, // flags\n  0x00, 0x00, 0x00, 0x00, // creation_time\n  0x00, 0x00, 0x00, 0x00, // modification_time\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x00, // reserved\n  (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, // layer\n  0x00, 0x00, // alternate_group\n  0x01, 0x00, // non-audio track volume\n  0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n  (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n  ]);\n  return box(types.tkhd, result);\n};\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\n\n\ntraf = function traf(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x3a, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x00, 0x00, 0x00 // default_sample_flags\n  ]));\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n  0x00, 0x00, 0x00, // flags\n  // baseMediaDecodeTime\n  upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n\n  dataOffset = 32 + // tfhd\n  20 + // tfdt\n  8 + // traf header\n  16 + // mfhd\n  8 + // moof header\n  8; // mdat header\n  // audio tracks require less metadata\n\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n  } // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n\n\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n  return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n};\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\n\n\ntrak = function trak(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak, tkhd(track), mdia(track));\n};\n\ntrex = function trex(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]); // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function () {\n  var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n  trunHeader = function trunHeader(samples, offset) {\n    var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [0x00, // version 0\n    0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n    (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n    (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function videoTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 16 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n      sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n      (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function audioTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 8 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function trun(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n})();\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function initSegment(tracks) {\n    var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\n\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function CaptionStream() {\n  CaptionStream.prototype.init.call(this);\n  this.captionPackets_ = [];\n  this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n  this.reset(); // forward data and done events from CCs to this CaptionStream\n\n  this.ccStreams_.forEach(function (cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n};\n\nCaptionStream.prototype = new Stream();\n\nCaptionStream.prototype.push = function (event) {\n  var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  } // parse the sei\n\n\n  sei = cea708Parser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  } // parse out the user data payload\n\n\n  userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n  if (!userData) {\n    return;\n  } // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n\n\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n    this.numSameDts_--;\n\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n\n    return;\n  } // parse out CC data packets and save them for later\n\n\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function () {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function (cc) {\n      cc.flush();\n    }, this);\n    return;\n  } // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n\n\n  this.captionPackets_.forEach(function (elem, idx) {\n    elem.presortIndex = idx;\n  }); // sort caption byte-pairs based on their PTS values\n\n  this.captionPackets_.sort(function (a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n\n    return a.pts - b.pts;\n  });\n  this.captionPackets_.forEach(function (packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    } // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n\n  }, this);\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function (cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function () {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function (ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function (packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1000;\n};\n\nCaptionStream.prototype.setsChannel2Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1800;\n}; // ----------------------\n// Session to Application\n// ----------------------\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\n\n\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,\n  // á\n  0x5c: 0xe9,\n  // é\n  0x5e: 0xed,\n  // í\n  0x5f: 0xf3,\n  // ó\n  0x60: 0xfa,\n  // ú\n  0x7b: 0xe7,\n  // ç\n  0x7c: 0xf7,\n  // ÷\n  0x7d: 0xd1,\n  // Ñ\n  0x7e: 0xf1,\n  // ñ\n  0x7f: 0x2588,\n  // █\n  0x0130: 0xae,\n  // ®\n  0x0131: 0xb0,\n  // °\n  0x0132: 0xbd,\n  // ½\n  0x0133: 0xbf,\n  // ¿\n  0x0134: 0x2122,\n  // ™\n  0x0135: 0xa2,\n  // ¢\n  0x0136: 0xa3,\n  // £\n  0x0137: 0x266a,\n  // ♪\n  0x0138: 0xe0,\n  // à\n  0x0139: 0xa0,\n  //\n  0x013a: 0xe8,\n  // è\n  0x013b: 0xe2,\n  // â\n  0x013c: 0xea,\n  // ê\n  0x013d: 0xee,\n  // î\n  0x013e: 0xf4,\n  // ô\n  0x013f: 0xfb,\n  // û\n  0x0220: 0xc1,\n  // Á\n  0x0221: 0xc9,\n  // É\n  0x0222: 0xd3,\n  // Ó\n  0x0223: 0xda,\n  // Ú\n  0x0224: 0xdc,\n  // Ü\n  0x0225: 0xfc,\n  // ü\n  0x0226: 0x2018,\n  // ‘\n  0x0227: 0xa1,\n  // ¡\n  0x0228: 0x2a,\n  // *\n  0x0229: 0x27,\n  // '\n  0x022a: 0x2014,\n  // —\n  0x022b: 0xa9,\n  // ©\n  0x022c: 0x2120,\n  // ℠\n  0x022d: 0x2022,\n  // •\n  0x022e: 0x201c,\n  // “\n  0x022f: 0x201d,\n  // ”\n  0x0230: 0xc0,\n  // À\n  0x0231: 0xc2,\n  // Â\n  0x0232: 0xc7,\n  // Ç\n  0x0233: 0xc8,\n  // È\n  0x0234: 0xca,\n  // Ê\n  0x0235: 0xcb,\n  // Ë\n  0x0236: 0xeb,\n  // ë\n  0x0237: 0xce,\n  // Î\n  0x0238: 0xcf,\n  // Ï\n  0x0239: 0xef,\n  // ï\n  0x023a: 0xd4,\n  // Ô\n  0x023b: 0xd9,\n  // Ù\n  0x023c: 0xf9,\n  // ù\n  0x023d: 0xdb,\n  // Û\n  0x023e: 0xab,\n  // «\n  0x023f: 0xbb,\n  // »\n  0x0320: 0xc3,\n  // Ã\n  0x0321: 0xe3,\n  // ã\n  0x0322: 0xcd,\n  // Í\n  0x0323: 0xcc,\n  // Ì\n  0x0324: 0xec,\n  // ì\n  0x0325: 0xd2,\n  // Ò\n  0x0326: 0xf2,\n  // ò\n  0x0327: 0xd5,\n  // Õ\n  0x0328: 0xf5,\n  // õ\n  0x0329: 0x7b,\n  // {\n  0x032a: 0x7d,\n  // }\n  0x032b: 0x5c,\n  // \\\n  0x032c: 0x5e,\n  // ^\n  0x032d: 0x5f,\n  // _\n  0x032e: 0x7c,\n  // |\n  0x032f: 0x7e,\n  // ~\n  0x0330: 0xc4,\n  // Ä\n  0x0331: 0xe4,\n  // ä\n  0x0332: 0xd6,\n  // Ö\n  0x0333: 0xf6,\n  // ö\n  0x0334: 0xdf,\n  // ß\n  0x0335: 0xa5,\n  // ¥\n  0x0336: 0xa4,\n  // ¤\n  0x0337: 0x2502,\n  // │\n  0x0338: 0xc5,\n  // Å\n  0x0339: 0xe5,\n  // å\n  0x033a: 0xd8,\n  // Ø\n  0x033b: 0xf8,\n  // ø\n  0x033c: 0x250c,\n  // ┌\n  0x033d: 0x2510,\n  // ┐\n  0x033e: 0x2514,\n  // └\n  0x033f: 0x2518 // ┘\n\n};\n\nvar getCharFromCode = function getCharFromCode(code) {\n  if (code === null) {\n    return '';\n  }\n\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n}; // the index of the last row in a CEA-608 display buffer\n\n\nvar BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\n\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\n\nvar createDisplayBuffer = function createDisplayBuffer() {\n  var result = [],\n      i = BOTTOM_ROW + 1;\n\n  while (i--) {\n    result.push('');\n  }\n\n  return result;\n};\n\nvar Cea608Stream = function Cea608Stream(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n  this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n  this.setConstants();\n  this.reset();\n\n  this.push = function (packet) {\n    var data, swap, char0, char1, text; // remove the parity bits\n\n    data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    } // Store control codes\n\n\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n      this.flushDisplayed(packet.pts); // flip memory\n\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n      this.startPts_ = packet.pts;\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts; // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      } // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n\n\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      } // Detect offset control codes and adjust cursor\n\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      } // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n\n\n      if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      } // We have a normal character in char0, and possibly one in char1\n\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n    } // finish data processing\n\n  };\n};\n\nCea608Stream.prototype = new Stream(); // Trigger a cue point that captures the current state of the\n// display buffer\n\nCea608Stream.prototype.flushDisplayed = function (pts) {\n  var content = this.displayed_ // remove spaces from the start and end of the string\n  .map(function (row) {\n    try {\n      return row.trim();\n    } catch (e) {\n      // Ordinarily, this shouldn't happen. However, caption\n      // parsing errors should not throw exceptions and\n      // break playback.\n      // eslint-disable-next-line no-console\n      console.error('Skipping malformed caption.');\n      return '';\n    }\n  }) // combine all text rows to display in one cue\n  .join('\\n') // and remove blank rows from the start and end, but not the middle\n  .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n/**\n * Zero out the data, used for startup and on seek\n */\n\n\nCea608Stream.prototype.reset = function () {\n  this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n  this.formatting_ = [];\n};\n/**\n * Sets up control code and related constants for this instance\n */\n\n\nCea608Stream.prototype.setConstants = function () {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_ = 0x10;\n    this.EXT_ = 0x11;\n    this.CONTROL_ = (0x14 | this.field_) << 8;\n    this.OFFSET_ = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_ = 0x18;\n    this.EXT_ = 0x19;\n    this.CONTROL_ = (0x1c | this.field_) << 8;\n    this.OFFSET_ = 0x1f;\n  } // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n\n\n  this.PADDING_ = 0x0000; // Pop-on Mode\n\n  this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n  this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n  this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n  this.BACKSPACE_ = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\n\n\nCea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\n\n\nCea608Stream.prototype.isExtCharacter = function (char0, char1) {\n  return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\n\n\nCea608Stream.prototype.isMidRowCode = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n};\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\n\n\nCea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n  return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n};\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\n\n\nCea608Stream.prototype.isPAC = function (char0, char1) {\n  return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n};\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\n\n\nCea608Stream.prototype.isColorPAC = function (char1) {\n  return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n};\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\n\n\nCea608Stream.prototype.isNormalChar = function (_char) {\n  return _char >= 0x20 && _char <= 0x7f;\n};\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\n\n\nCea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n}; // Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\n\n\nCea608Stream.prototype.addFormatting = function (pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function (text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n}; // Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\n\n\nCea608Stream.prototype.clearFormatting = function (pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n\n  var text = this.formatting_.reverse().reduce(function (text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n}; // Mode Implementations\n\n\nCea608Stream.prototype.popOn = function (pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function () {\n  var i; // clear out inactive rows\n\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  } // shift displayed rows up\n\n\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  } // clear out the bottom row\n\n\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n}; // exports\n\n\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\n\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\n\nvar parseSei = function parseSei(bytes) {\n  var i = 0,\n      result = {\n    payloadType: -1,\n    payloadSize: 0\n  },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    } // Parse payload type\n\n\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n\n    payloadType += bytes[i++]; // Parse payload size\n\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n\n    payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    } // skip the payload and parse the next message\n\n\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n}; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\nvar parseUserData = function parseUserData(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n  if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n    return null;\n  } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n  if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n    return null;\n  } // finally, user_data_type_code should be 0x03 for caption data\n\n\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  } // return the user_data_type_structure and strip the trailing\n  // marker bits\n\n\n  return sei.payload.subarray(8, sei.payload.length - 1);\n}; // see CEA-708-D, section 4.4\n\n\nvar parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n  var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n  if (!(userData[0] & 0x40)) {\n    return results;\n  } // parse out the cc_data_1 and cc_data_2 fields\n\n\n  count = userData[0] & 0x1f;\n\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    }; // capture cc data when cc_valid is 1\n\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n      results.push(data);\n    }\n  }\n\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n  var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n  while (i < length - 2) {\n    if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n      emulationPreventionBytesPositions.push(i + 2);\n      i += 2;\n    } else {\n      i++;\n    }\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (emulationPreventionBytesPositions.length === 0) {\n    return data;\n  } // Create a new array to hold the NAL unit data\n\n\n  newLength = length - emulationPreventionBytesPositions.length;\n  newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === emulationPreventionBytesPositions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      emulationPreventionBytesPositions.shift();\n    }\n\n    newData[i] = data[sourceIndex];\n  }\n\n  return newData;\n}; // exports\n\n\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function handleRollover(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n\n\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += direction * MAX_TS;\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function TimestampRolloverStream(type) {\n  var lastDTS, referenceDTS;\n  TimestampRolloverStream.prototype.init.call(this);\n  this.type_ = type;\n\n  this.push = function (data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n    lastDTS = data.dts;\n    this.trigger('data', data);\n  };\n\n  this.flush = function () {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function () {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n};\n\nTimestampRolloverStream.prototype = new Stream();\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};","module.exports = function (originalModule) {\n  if (!originalModule.webpackPolyfill) {\n    var module = Object.create(originalModule); // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    Object.defineProperty(module, \"exports\", {\n      enumerable: true\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","module.exports = SafeParseTuple;\n\nfunction SafeParseTuple(obj, reviver) {\n  var json;\n  var error = null;\n\n  try {\n    json = JSON.parse(obj, reviver);\n  } catch (err) {\n    error = err;\n  }\n\n  return [error, json];\n}","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\n\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\n\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\nvar PES_TIMESCALE = 90000,\n    MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\n\nvar parsePsi_ = function parsePsi_(bytes, pmt) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n\n          break;\n\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n\n          break;\n\n        default:\n          break;\n      } // Found the pat and pmt, we can stop walking the segment\n\n\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\n\n\nvar parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n  var endLoop = false; // Start walking from start of segment to get first audio packet\n\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last audio packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\n\n\nvar parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n  var endLoop = false;\n  var currentFrame = {\n    data: [],\n    size: 0\n  }; // Start walking from start of segment to get first video packet\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n\n                  currentFrame.size = 0;\n                }\n              }\n\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last video packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'video';\n              result.video.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\n\n\nvar adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n\n    segmentInfo.audio.forEach(function (info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n\n    segmentInfo.video.forEach(function (info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n/**\n * inspects the aac data stream for start and end time information\n */\n\n\nvar inspectAac_ = function inspectAac_(bytes) {\n  var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n\n        byteIndex += frameSize;\n        break;\n\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n\n      default:\n        byteIndex++;\n        break;\n    }\n\n    if (endLoop) {\n      return null;\n    }\n  }\n\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n  var result = {\n    audio: [{\n      type: 'audio',\n      dts: timestamp,\n      pts: timestamp\n    }, {\n      type: 'audio',\n      dts: timestamp + audioCount * 1024 * audioTimescale,\n      pts: timestamp + audioCount * 1024 * audioTimescale\n    }]\n  };\n  return result;\n};\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\n\n\nvar inspectTs_ = function inspectTs_(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n  var result = {};\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n\n          break;\n\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\n\n\nvar inspect = function inspect(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || !result.audio && !result.video) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nexport default eq;","import eq from './eq.js';\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nexport default assocIndexOf;","import assocIndexOf from './_assocIndexOf.js';\n/** Used for built-in method references. */\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;","import assocIndexOf from './_assocIndexOf.js';\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;","import assocIndexOf from './_assocIndexOf.js';\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;","import assocIndexOf from './_assocIndexOf.js';\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nexport default listCacheSet;","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nexport default ListCache;","import ListCache from './_ListCache.js';\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nexport default stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;","import root from './_root.js';\n/** Built-in value references. */\n\nvar Symbol = root.Symbol;\nexport default Symbol;","import Symbol from './_Symbol.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nexport default getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n/** `Object#toString` result references. */\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nexport default baseGetTag;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n/** `Object#toString` result references. */\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;","import root from './_root.js';\n/** Used to detect overreaching core-js shims. */\n\nvar coreJsData = root['__core-js_shared__'];\nexport default coreJsData;","import coreJsData from './_coreJsData.js';\n/** Used to detect methods masquerading as native. */\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nexport default isMasked;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nexport default toSource;","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar Map = getNative(root, 'Map');\nexport default Map;","import getNative from './_getNative.js';\n/* Built-in method references that are verified to be native. */\n\nvar nativeCreate = getNative(Object, 'create');\nexport default nativeCreate;","import nativeCreate from './_nativeCreate.js';\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;","import nativeCreate from './_nativeCreate.js';\n/** Used to stand-in for `undefined` hash values. */\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;","import nativeCreate from './_nativeCreate.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;","import nativeCreate from './_nativeCreate.js';\n/** Used to stand-in for `undefined` hash values. */\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nexport default Hash;","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nexport default mapCacheClear;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nexport default isKeyable;","import isKeyable from './_isKeyable.js';\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nexport default getMapData;","import getMapData from './_getMapData.js';\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;","import getMapData from './_getMapData.js';\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;","import getMapData from './_getMapData.js';\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;","import getMapData from './_getMapData.js';\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nexport default MapCache;","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n/** Used as the size to enable large array optimizations. */\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nexport default Stack;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nexport default setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nexport default SetCache;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;","import root from './_root.js';\n/** Built-in value references. */\n\nvar Uint8Array = root.Uint8Array;\nexport default Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nexport default equalByTag;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nexport default arrayPush;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nexport default isArray;","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nexport default arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nexport default getSymbols;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nexport default baseTimes;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nexport default isArguments;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nexport default isIndex;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n/* Node.js helper references. */\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nexport default isTypedArray;","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nexport default arrayLikeKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nexport default isPrototype;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;","import overArg from './_overArg.js';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeKeys = overArg(Object.keys, Object);\nexport default nativeKeys;","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nexport default baseKeys;","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;","import getAllKeys from './_getAllKeys.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar DataView = getNative(root, 'DataView');\nexport default DataView;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar Promise = getNative(root, 'Promise');\nexport default Promise;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar Set = getNative(root, 'Set');\nexport default Set;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar WeakMap = getNative(root, 'WeakMap');\nexport default WeakMap;","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n/** `Object#toString` result references. */\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nexport default getTag;","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;","import baseIsEqual from './_baseIsEqual.js';\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\n\nexport { LineStream, ParseStream, Parser };","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\nvar PADDING = void 0;\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n} // pre-define the padding values\n\n\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\nexport { pad, unpad, version as VERSION };","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0; // Compute double and third tables\n\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x; // Compute MixColumns\n\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  } // Compactify. Considerable speedup on Firefox.\n\n\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n\n  return tables;\n};\n\nvar aesTables = null;\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n\n    if (!aesTables) {\n      aesTables = precompute();\n    } // then make a copy of that object for use\n\n\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey]; // schedule encryption keys\n\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1]; // apply sbox\n\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    } // schedule decryption keys\n\n\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0; // key.length === 2 ?\n\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1]; // load up the tables\n\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;\n      b = b2;\n      c = c2;\n    } // Last round.\n\n\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;\n      a = b;\n      b = c;\n      c = d;\n      d = a2;\n    }\n  };\n\n  return AES;\n}();\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * @file async-stream.js\n */\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\n\n\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\n\n\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n  var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0; // iteration variable\n\n  var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n    this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    } // invoke the done() callback when everything is finished\n\n\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  /**\n   * @private\n   */\n\n\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\n\nexport { decrypt, Decrypter, AsyncStream };","/**\n * @license\n * Video.js 7.5.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\nvar version = \"7.5.4\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom =\n/*#__PURE__*/\nObject.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\n\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + new Date().getTime();\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events =\n/*#__PURE__*/\nObject.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a keydown event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (this.player_) {\n      this.player_.handleKeyPress(event);\n    }\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this; // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\nvar browser =\n/*#__PURE__*/\nObject.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi;\nvar prefixedAPI = false; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  prefixedAPI = browserApi[0] === specApi[0];\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      this.close();\n    }\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      } // Hide controls and note if they were enabled.\n\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url =\n/*#__PURE__*/\nObject.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_assertThisInitialized(_this))\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `Component`s element.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  }\n  /**\n   * Disable this `Component`s element.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  }\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space or Enter key operation to fire a click event\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    } // call handleFocus manually to get hotkeys working\n\n\n    this.player_.handleFocus({});\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for a button.\n    if (!(keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter'))) {\n      // Pass keypress handling up for unsupported keys\n      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise); // call handleFocus manually to get hotkeys working\n\n      this.player_.handleFocus({});\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {} // Override the default `Button` behavior, and don't pass the keypress event\n  //  up to the player because this button is part of a `ModalDialog`, which\n  //  doesn't pass keypresses to the player either.\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      this.stepForward();\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\n\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keypress handling up for unused keys\n      _ClickableComponent.prototype.handleKeyPress.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    } // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n\n    var kinds = (referenceTrack.kinds || [referenceTrack.kind]).filter(Boolean);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_);\n    this.one(this.player_, 'play', this.handlePlay); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n} // on the player when they happen\n\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.fullWindowOnEscKey);\n    _this.boundHandleKeyPress_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleKeyPress); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name$$1) {\n        if (typeof _this[name$$1] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name$$1 + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_assertThisInitialized(_this)), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name$$1) {\n        _this[name$$1](options.plugins[name$$1]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_assertThisInitialized(_this)); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('focus', _this.handleFocus);\n\n    _this.on('blur', _this.handleBlur);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, FullscreenApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    off(document, 'keydown', this.boundHandleKeyPress_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise.catch(restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise.catch(muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(document[fsApi.fullscreenElement] === this.el() || this.el().matches(':' + fsApi.fullscreen)); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (!prefixedAPI) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * This gets called when a `Player` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n  ;\n\n  _proto.handleFocus = function handleFocus(event) {\n    // call off first to make sure we don't keep adding keydown handlers\n    off(document, 'keydown', this.boundHandleKeyPress_);\n    on(document, 'keydown', this.boundHandleKeyPress_);\n  }\n  /**\n   * Called when a `Player` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', this.boundHandleKeyPress_);\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (this.options_.userActions && this.options_.userActions.hotkeys && this.options_.userActions.hotkeys !== false) {\n      if (typeof this.options_.userActions.hotkeys === 'function') {\n        this.options_.userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[FullscreenApi.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\n\n\nvar _inherits$1 = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits$1(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n\n    setTextContent(style$1, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name$$1 + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = xhr;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n/**\n * @videojs/http-streaming\n * @version 1.9.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream; // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2016 Brightcove\n     * All rights reserved.\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n              return ' ' + ('00' + _byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type if updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      } // TODO: check for sidx here\n      // Continue asynchronously if there is no sidx\n      // wait one tick to allow haveMaster to run first on a child loader\n\n\n      this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n        startingState: startingState,\n        playlist: playlist\n      }), 0);\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist;\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this2 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this2.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this3 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this3.request = null;\n\n        if (error) {\n          _this3.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this3.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this3.state === 'HAVE_NOTHING') {\n            _this3.started = false;\n          }\n\n          return _this3.trigger('error');\n        }\n\n        _this3.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this3.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this3.masterLoaded_ = Date.now();\n        }\n\n        _this3.srcUrl = resolveManifestRedirect(_this3.handleManifestRedirects, _this3.srcUrl, req);\n\n        _this3.syncClientServerClock_(_this3.onClientServerClockSync_.bind(_this3));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this4 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this4.clientOffset_ = _this4.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this4.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this4.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this5 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this6 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this6.request = null;\n\n        if (error) {\n          _this6.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this6.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return _this6.trigger('error');\n        }\n\n        _this6.masterXml_ = req.responseText;\n\n        var newMaster = _this6.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this6.master, newMaster);\n\n        if (updatedMaster) {\n          _this6.master = updatedMaster;\n        }\n\n        window$1.setTimeout(function () {\n          _this6.trigger('minimumUpdatePeriod');\n        }, _this6.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this7 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this7.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n  // incrementally decrypt the segment\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // Fmp4 CaptionParser\n\n    _this.captionParser_ = new CaptionParser();\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        });\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.9.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"321\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.6\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    r = require(\"scheduler\");\n\nfunction ba(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction x(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ba(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : x(\"227\");\n\nfunction ca(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar da = !1,\n    ea = null,\n    fa = !1,\n    ha = null,\n    ia = {\n  onError: function onError(a) {\n    da = !0;\n    ea = a;\n  }\n};\n\nfunction ja(a, b, c, d, e, f, g, h, l) {\n  da = !1;\n  ea = null;\n  ca.apply(ia, arguments);\n}\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ja.apply(this, arguments);\n\n  if (da) {\n    if (da) {\n      var k = ea;\n      da = !1;\n      ea = null;\n    } else x(\"198\"), k = void 0;\n\n    fa || (fa = !0, ha = k);\n  }\n}\n\nvar la = null,\n    ma = {};\n\nfunction na() {\n  if (la) for (var a in ma) {\n    var b = ma[a],\n        c = la.indexOf(a);\n    -1 < c ? void 0 : x(\"96\", a);\n\n    if (!oa[c]) {\n      b.extractEvents ? void 0 : x(\"97\", a);\n      oa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        pa.hasOwnProperty(h) ? x(\"99\", h) : void 0;\n        pa[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && qa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : x(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction qa(a, b, c) {\n  ra[a] ? x(\"100\", a) : void 0;\n  ra[a] = b;\n  sa[a] = b.eventTypes[c].dependencies;\n}\n\nvar oa = [],\n    pa = {},\n    ra = {},\n    sa = {},\n    ta = null,\n    ua = null,\n    va = null;\n\nfunction wa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = va(c);\n  ka(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction xa(a, b) {\n  null == b ? x(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction ya(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar za = null;\n\nfunction Aa(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      wa(a, b[d], c[d]);\n    } else b && wa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ba = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    la ? x(\"101\") : void 0;\n    la = Array.prototype.slice.call(a);\n    na();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x(\"102\", c) : void 0, ma[c] = d, b = !0);\n      }\n    }\n\n    b && na();\n  }\n};\n\nfunction Ca(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ta(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? x(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Da(a) {\n  null !== a && (za = xa(za, a));\n  a = za;\n  za = null;\n  if (a && (ya(a, Aa), za ? x(\"95\") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;\n}\n\nvar Ea = Math.random().toString(36).slice(2),\n    Fa = \"__reactInternalInstance$\" + Ea,\n    Ga = \"__reactEventHandlers$\" + Ea;\n\nfunction Ha(a) {\n  if (a[Fa]) return a[Fa];\n\n  for (; !a[Fa];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Fa];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ia(a) {\n  a = a[Fa];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ja(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  x(\"33\");\n}\n\nfunction Ka(a) {\n  return a[Ga] || null;\n}\n\nfunction La(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Ma(a, b, c) {\n  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);\n}\n\nfunction Na(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = La(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Ma(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Ma(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Oa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));\n}\n\nfunction Pa(a) {\n  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);\n}\n\nfunction Qa(a) {\n  ya(a, Na);\n}\n\nvar Ra = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Sa(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ta = {\n  animationend: Sa(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Sa(\"Animation\", \"AnimationIteration\"),\n  animationstart: Sa(\"Animation\", \"AnimationStart\"),\n  transitionend: Sa(\"Transition\", \"TransitionEnd\")\n},\n    Ua = {},\n    Va = {};\nRa && (Va = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), \"TransitionEvent\" in window || delete Ta.transitionend.transition);\n\nfunction Wa(a) {\n  if (Ua[a]) return Ua[a];\n  if (!Ta[a]) return a;\n  var b = Ta[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Xa = Wa(\"animationend\"),\n    Ya = Wa(\"animationiteration\"),\n    Za = Wa(\"animationstart\"),\n    $a = Wa(\"transitionend\"),\n    ab = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    bb = null,\n    cb = null,\n    db = null;\n\nfunction eb() {\n  if (db) return db;\n  var a,\n      b = cb,\n      c = b.length,\n      d,\n      e = \"value\" in bb ? bb.value : bb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return db = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction fb() {\n  return !0;\n}\n\nfunction gb() {\n  return !1;\n}\n\nfunction y(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;\n  this.isPropagationStopped = gb;\n  return this;\n}\n\nn(y.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);\n  },\n  persist: function persist() {\n    this.isPersistent = fb;\n  },\n  isPersistent: gb,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = gb;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\ny.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\ny.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  hb(c);\n  return c;\n};\n\nhb(y);\n\nfunction ib(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction jb(a) {\n  a instanceof this ? void 0 : x(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction hb(a) {\n  a.eventPool = [];\n  a.getPooled = ib;\n  a.release = jb;\n}\n\nvar kb = y.extend({\n  data: null\n}),\n    lb = y.extend({\n  data: null\n}),\n    mb = [9, 13, 27, 32],\n    nb = Ra && \"CompositionEvent\" in window,\n    ob = null;\nRa && \"documentMode\" in document && (ob = document.documentMode);\nvar pb = Ra && \"TextEvent\" in window && !ob,\n    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),\n    rb = String.fromCharCode(32),\n    sb = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    tb = !1;\n\nfunction ub(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== mb.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction vb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return vb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      tb = !0;\n      return rb;\n\n    case \"textInput\":\n      return a = b.data, a === rb && tb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction yb(a, b) {\n  if (wb) return \"compositionend\" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return qb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar zb = {\n  eventTypes: sb,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (nb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = sb.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = sb.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = sb.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else wb ? ub(a, c) && (e = sb.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = sb.compositionStart);\n    e ? (qb && \"ko\" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = \"value\" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;\n    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Ab = null,\n    Bb = null,\n    Cb = null;\n\nfunction Db(a) {\n  if (a = ua(a)) {\n    \"function\" !== typeof Ab ? x(\"280\") : void 0;\n    var b = ta(a.stateNode);\n    Ab(a.stateNode, a.type, b);\n  }\n}\n\nfunction Eb(a) {\n  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;\n}\n\nfunction Fb() {\n  if (Bb) {\n    var a = Bb,\n        b = Cb;\n    Cb = Bb = null;\n    Db(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Db(b[a]);\n    }\n  }\n}\n\nfunction Gb(a, b) {\n  return a(b);\n}\n\nfunction Hb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Ib() {}\n\nvar Jb = !1;\n\nfunction Kb(a, b) {\n  if (Jb) return a(b);\n  Jb = !0;\n\n  try {\n    return Gb(a, b);\n  } finally {\n    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();\n  }\n}\n\nvar Lb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Mb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Lb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Nb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Ob(a) {\n  if (!Ra) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Pb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Qb(a) {\n  var b = Pb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Rb(a) {\n  a._valueTracker || (a._valueTracker = Qb(a));\n}\n\nfunction Sb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Pb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nTb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Tb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Ub = /^(.*)[\\\\\\/]/,\n    z = \"function\" === typeof Symbol && Symbol.for,\n    Vb = z ? Symbol.for(\"react.element\") : 60103,\n    Wb = z ? Symbol.for(\"react.portal\") : 60106,\n    Xb = z ? Symbol.for(\"react.fragment\") : 60107,\n    Yb = z ? Symbol.for(\"react.strict_mode\") : 60108,\n    Zb = z ? Symbol.for(\"react.profiler\") : 60114,\n    $b = z ? Symbol.for(\"react.provider\") : 60109,\n    ac = z ? Symbol.for(\"react.context\") : 60110,\n    bc = z ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    cc = z ? Symbol.for(\"react.forward_ref\") : 60112,\n    dc = z ? Symbol.for(\"react.suspense\") : 60113,\n    ec = z ? Symbol.for(\"react.memo\") : 60115,\n    fc = z ? Symbol.for(\"react.lazy\") : 60116,\n    gc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction hc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = gc && a[gc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction ic(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case bc:\n      return \"ConcurrentMode\";\n\n    case Xb:\n      return \"Fragment\";\n\n    case Wb:\n      return \"Portal\";\n\n    case Zb:\n      return \"Profiler\";\n\n    case Yb:\n      return \"StrictMode\";\n\n    case dc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ac:\n      return \"Context.Consumer\";\n\n    case $b:\n      return \"Context.Provider\";\n\n    case cc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ec:\n      return ic(a.type);\n\n    case fc:\n      if (a = 1 === a._status ? a._result : null) return ic(a);\n  }\n  return null;\n}\n\nfunction jc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = ic(a.type);\n        c = null;\n        d && (c = ic(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Ub, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar kc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    lc = Object.prototype.hasOwnProperty,\n    mc = {},\n    nc = {};\n\nfunction oc(a) {\n  if (lc.call(nc, a)) return !0;\n  if (lc.call(mc, a)) return !1;\n  if (kc.test(a)) return nc[a] = !0;\n  mc[a] = !0;\n  return !1;\n}\n\nfunction pc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction qc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || pc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction C(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar D = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  D[b] = new C(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  D[a] = new C(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  D[a] = new C(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  D[a] = new C(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  D[a] = new C(a, 5, !1, a.toLowerCase(), null);\n});\nvar rc = /[\\-:]([a-z])/g;\n\nfunction sc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\n[\"tabIndex\", \"crossOrigin\"].forEach(function (a) {\n  D[a] = new C(a, 1, !1, a.toLowerCase(), null);\n});\n\nfunction tc(a, b, c, d) {\n  var e = D.hasOwnProperty(b) ? D[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction uc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction vc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction wc(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = uc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction xc(a, b) {\n  b = b.checked;\n  null != b && tc(a, \"checked\", b, !1);\n}\n\nfunction yc(a, b) {\n  xc(a, b);\n  var c = uc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? zc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && zc(a, b.type, uc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ac(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction zc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Bc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Cc(a, b, c) {\n  a = y.getPooled(Bc.change, a, b, c);\n  a.type = \"change\";\n  Eb(c);\n  Qa(a);\n  return a;\n}\n\nvar Dc = null,\n    Ec = null;\n\nfunction Fc(a) {\n  Da(a);\n}\n\nfunction Gc(a) {\n  var b = Ja(a);\n  if (Sb(b)) return a;\n}\n\nfunction Hc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Ic = !1;\nRa && (Ic = Ob(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Jc() {\n  Dc && (Dc.detachEvent(\"onpropertychange\", Kc), Ec = Dc = null);\n}\n\nfunction Kc(a) {\n  \"value\" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));\n}\n\nfunction Lc(a, b, c) {\n  \"focus\" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent(\"onpropertychange\", Kc)) : \"blur\" === a && Jc();\n}\n\nfunction Mc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Gc(Ec);\n}\n\nfunction Nc(a, b) {\n  if (\"click\" === a) return Gc(b);\n}\n\nfunction Oc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Gc(b);\n}\n\nvar Pc = {\n  eventTypes: Bc,\n  _isInputEventSupported: Ic,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ja(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Nc);\n    if (f && (f = f(a, b))) return Cc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && zc(e, \"number\", e.value);\n  }\n},\n    Qc = y.extend({\n  view: null,\n  detail: null\n}),\n    Rc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Sc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;\n}\n\nfunction Tc() {\n  return Sc;\n}\n\nvar Uc = 0,\n    Vc = 0,\n    Wc = !1,\n    Xc = !1,\n    Yc = Qc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Tc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Uc;\n    Uc = a.screenX;\n    return Wc ? \"mousemove\" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Vc;\n    Vc = a.screenY;\n    return Xc ? \"mousemove\" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);\n  }\n}),\n    Zc = Yc.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    $c = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ad = {\n  eventTypes: $c,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : Ja(f);\n    e = null == b ? e : Ja(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = La(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = La(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = La(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = La(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = La(b);\n        e = La(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = La(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = La(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Oa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Oa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction bd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar cd = Object.prototype.hasOwnProperty;\n\nfunction dd(a, b) {\n  if (bd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction ed(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction fd(a) {\n  2 !== ed(a) ? x(\"188\") : void 0;\n}\n\nfunction gd(a) {\n  var b = a.alternate;\n  if (!b) return b = ed(a), 3 === b ? x(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return fd(e), a;\n        if (g === d) return fd(e), b;\n        g = g.sibling;\n      }\n\n      x(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : x(\"189\");\n      }\n    }\n    c.alternate !== d ? x(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? x(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction hd(a) {\n  a = gd(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar id = y.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    jd = y.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    kd = Qc.extend({\n  relatedTarget: null\n});\n\nfunction ld(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar md = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    nd = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    od = Qc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = md[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = ld(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? nd[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Tc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? ld(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? ld(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    pd = Yc.extend({\n  dataTransfer: null\n}),\n    qd = Qc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Tc\n}),\n    rd = y.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    sd = Yc.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    td = [[\"abort\", \"abort\"], [Xa, \"animationEnd\"], [Ya, \"animationIteration\"], [Za, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [$a, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    ud = {},\n    vd = {};\n\nfunction wd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  ud[a] = b;\n  vd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  wd(a, !0);\n});\ntd.forEach(function (a) {\n  wd(a, !1);\n});\nvar xd = {\n  eventTypes: ud,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = vd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = vd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === ld(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = od;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = kd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = Yc;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = pd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = qd;\n        break;\n\n      case Xa:\n      case Ya:\n      case Za:\n        a = id;\n        break;\n\n      case $a:\n        a = rd;\n        break;\n\n      case \"scroll\":\n        a = Qc;\n        break;\n\n      case \"wheel\":\n        a = sd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = jd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = Zc;\n        break;\n\n      default:\n        a = y;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Qa(b);\n    return b;\n  }\n},\n    yd = xd.isInteractiveTopLevelEventType,\n    zd = [];\n\nfunction Ad(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ha(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Nb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {\n      var l = oa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));\n    }\n\n    Da(g);\n  }\n}\n\nvar Bd = !0;\n\nfunction E(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Ed(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Cd(a, b) {\n  Hb(Dd, a, b);\n}\n\nfunction Dd(a, b) {\n  if (Bd) {\n    var c = Nb(b);\n    c = Ha(c);\n    null === c || \"number\" !== typeof c.tag || 2 === ed(c) || (c = null);\n\n    if (zd.length) {\n      var d = zd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Kb(Ad, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);\n    }\n  }\n}\n\nvar Fd = {},\n    Gd = 0,\n    Hd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Id(a) {\n  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});\n  return Fd[a[Hd]];\n}\n\nfunction Jd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Kd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Ld(a, b) {\n  var c = Kd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Kd(c);\n  }\n}\n\nfunction Md(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Nd() {\n  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      var c = \"string\" === typeof b.contentWindow.location.href;\n    } catch (d) {\n      c = !1;\n    }\n\n    if (c) a = b.contentWindow;else break;\n    b = Jd(a.document);\n  }\n\n  return b;\n}\n\nfunction Od(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nfunction Pd() {\n  var a = Nd();\n\n  if (Od(a)) {\n    if (\"selectionStart\" in a) var b = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      b = (b = a.ownerDocument) && b.defaultView || window;\n      var c = b.getSelection && b.getSelection();\n\n      if (c && 0 !== c.rangeCount) {\n        b = c.anchorNode;\n        var d = c.anchorOffset,\n            e = c.focusNode;\n        c = c.focusOffset;\n\n        try {\n          b.nodeType, e.nodeType;\n        } catch (A) {\n          b = null;\n          break a;\n        }\n\n        var f = 0,\n            g = -1,\n            h = -1,\n            l = 0,\n            k = 0,\n            m = a,\n            p = null;\n\n        b: for (;;) {\n          for (var t;;) {\n            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);\n            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);\n            3 === m.nodeType && (f += m.nodeValue.length);\n            if (null === (t = m.firstChild)) break;\n            p = m;\n            m = t;\n          }\n\n          for (;;) {\n            if (m === a) break b;\n            p === b && ++l === d && (g = f);\n            p === e && ++k === c && (h = f);\n            if (null !== (t = m.nextSibling)) break;\n            m = p;\n            p = m.parentNode;\n          }\n\n          m = t;\n        }\n\n        b = -1 === g || -1 === h ? null : {\n          start: g,\n          end: h\n        };\n      } else b = null;\n    }\n    b = b || {\n      start: 0,\n      end: 0\n    };\n  } else b = null;\n\n  return {\n    focusedElem: a,\n    selectionRange: b\n  };\n}\n\nfunction Qd(a) {\n  var b = Nd(),\n      c = a.focusedElem,\n      d = a.selectionRange;\n\n  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n          f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ld(c, f);\n      var g = Ld(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n\n    for (a = c; a = a.parentNode;) {\n      1 === a.nodeType && b.push({\n        element: a,\n        left: a.scrollLeft,\n        top: a.scrollTop\n      });\n    }\n\n    \"function\" === typeof c.focus && c.focus();\n\n    for (c = 0; c < b.length; c++) {\n      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n    }\n  }\n}\n\nvar Rd = Ra && \"documentMode\" in document && 11 >= document.documentMode,\n    Sd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Td = null,\n    Ud = null,\n    Vd = null,\n    Wd = !1;\n\nfunction Xd(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if (Wd || null == Td || Td !== Jd(c)) return null;\n  c = Td;\n  \"selectionStart\" in c && Od(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = \"select\", a.target = Td, Qa(a), a);\n}\n\nvar Yd = {\n  eventTypes: Sd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Id(e);\n        f = sa.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ja(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Mb(e) || \"true\" === e.contentEditable) Td = e, Ud = b, Vd = null;\n        break;\n\n      case \"blur\":\n        Vd = Ud = Td = null;\n        break;\n\n      case \"mousedown\":\n        Wd = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return Wd = !1, Xd(c, d);\n\n      case \"selectionchange\":\n        if (Rd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return Xd(c, d);\n    }\n\n    return null;\n  }\n};\nBa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nta = Ka;\nua = Ia;\nva = Ja;\nBa.injectEventPluginsByName({\n  SimpleEventPlugin: xd,\n  EnterLeaveEventPlugin: ad,\n  ChangeEventPlugin: Pc,\n  SelectEventPlugin: Yd,\n  BeforeInputEventPlugin: zb\n});\n\nfunction Zd(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction $d(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = Zd(b.children)) a.children = b;\n  return a;\n}\n\nfunction ae(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + uc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction be(a, b) {\n  null != b.dangerouslySetInnerHTML ? x(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ce(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: uc(c)\n  };\n}\n\nfunction de(a, b) {\n  var c = uc(b.value),\n      d = uc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ee(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar fe = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ge(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction he(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ge(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ie = void 0,\n    je = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== fe.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ie = ie || document.createElement(\"div\");\n    ie.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ie.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction ke(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar le = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    me = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(le).forEach(function (a) {\n  me.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    le[b] = le[a];\n  });\n});\n\nfunction ne(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction oe(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = ne(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar pe = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction qe(a, b) {\n  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : x(\"61\")), null != b.style && \"object\" !== typeof b.style ? x(\"62\", \"\") : void 0);\n}\n\nfunction re(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction se(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Id(a);\n  b = sa[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Ed(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Ed(\"focus\", a);\n          Ed(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Ob(e) && Ed(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === ab.indexOf(e) && E(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction te() {}\n\nvar ue = null,\n    ve = null;\n\nfunction we(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction xe(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar ye = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    ze = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ae = r.unstable_scheduleCallback,\n    Be = r.unstable_cancelCallback;\n\nfunction Ce(a, b, c, d, e) {\n  a[Ga] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && xc(a, e);\n  re(c, d);\n  d = re(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? oe(a, h) : \"dangerouslySetInnerHTML\" === g ? je(a, h) : \"children\" === g ? ke(a, h) : tc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      yc(a, e);\n      break;\n\n    case \"textarea\":\n      de(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction De(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ee(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Fe = [],\n    Ge = -1;\n\nfunction F(a) {\n  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);\n}\n\nfunction G(a, b) {\n  Ge++;\n  Fe[Ge] = a.current;\n  a.current = b;\n}\n\nvar He = {},\n    H = {\n  current: He\n},\n    I = {\n  current: !1\n},\n    Ie = He;\n\nfunction Je(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return He;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction J(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ke(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Le(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Me(a, b, c) {\n  H.current !== He ? x(\"168\") : void 0;\n  G(H, b, a);\n  G(I, c, a);\n}\n\nfunction Ne(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : x(\"108\", ic(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Oe(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || He;\n  Ie = H.current;\n  G(H, b, a);\n  G(I, I.current, a);\n  return !0;\n}\n\nfunction Pe(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : x(\"169\");\n  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);\n  G(I, c, a);\n}\n\nvar Qe = null,\n    Re = null;\n\nfunction Se(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Te(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Qe = Se(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Re = Se(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ue(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction K(a, b, c, d) {\n  return new Ue(a, b, c, d);\n}\n\nfunction Ve(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction We(a) {\n  if (\"function\" === typeof a) return Ve(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === cc) return 11;\n    if (a === ec) return 14;\n  }\n\n  return 2;\n}\n\nfunction Xe(a, b) {\n  var c = a.alternate;\n  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction Ye(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ve(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case Xb:\n      return Ze(c.children, e, f, b);\n\n    case bc:\n      return $e(c, e | 3, f, b);\n\n    case Yb:\n      return $e(c, e | 2, f, b);\n\n    case Zb:\n      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;\n\n    case dc:\n      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case $b:\n          g = 10;\n          break a;\n\n        case ac:\n          g = 9;\n          break a;\n\n        case cc:\n          g = 11;\n          break a;\n\n        case ec:\n          g = 14;\n          break a;\n\n        case fc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      x(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = K(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction Ze(a, b, c, d) {\n  a = K(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction $e(a, b, c, d) {\n  a = K(8, a, d, b);\n  b = 0 === (b & 1) ? Yb : bc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction af(a, b, c) {\n  a = K(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction bf(a, b, c) {\n  b = K(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction cf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  df(b, a);\n}\n\nfunction ef(a, b) {\n  a.didError = !1;\n  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {\n    b < a.latestPingedTime && (a.latestPingedTime = 0);\n    var c = a.latestPendingTime;\n    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));\n    c = a.earliestSuspendedTime;\n    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);\n  }\n  df(0, a);\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  df(b, a);\n}\n\nfunction gf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction df(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction L(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction hf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar jf = new aa.Component().refs;\n\nfunction kf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar tf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.tag = rf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = lf();\n    c = mf(c, a);\n    var d = nf(c);\n    d.tag = sf;\n    void 0 !== b && null !== b && (d.callback = b);\n    of();\n    pf(a, d);\n    qf(a, c);\n  }\n};\n\nfunction uf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;\n}\n\nfunction vf(a, b, c) {\n  var d = !1,\n      e = He;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = tf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction wf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && tf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction xf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));\n  f = a.updateQueue;\n  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar zf = Array.isArray;\n\nfunction Af(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? x(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : x(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === jf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? x(\"284\") : void 0;\n    c._owner ? void 0 : x(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Bf(a, b) {\n  \"textarea\" !== a.type && x(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Cf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = Xe(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;\n    d = Ye(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Af(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function p(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = af(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Vb:\n          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;\n\n        case Wb:\n          return b = bf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;\n      Bf(a, b);\n    }\n\n    return null;\n  }\n\n  function t(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Vb:\n          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case Wb:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Bf(a, c);\n    }\n\n    return null;\n  }\n\n  function A(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Vb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case Wb:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Bf(b, d);\n    }\n\n    return null;\n  }\n\n  function v(e, g, h, k) {\n    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var w = t(e, q, h[u], k);\n\n      if (null === w) {\n        null === q && (q = B);\n        break;\n      }\n\n      a && q && null === w.alternate && b(e, q);\n      g = f(w, g, u);\n      null === m ? l = w : m.sibling = w;\n      m = w;\n      q = B;\n    }\n\n    if (u === h.length) return c(e, q), l;\n\n    if (null === q) {\n      for (; u < h.length; u++) {\n        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); u < h.length; u++) {\n      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = hc(h);\n    \"function\" !== typeof l ? x(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? x(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var v = t(e, q, w.value, k);\n\n      if (null === v) {\n        q || (q = B);\n        break;\n      }\n\n      a && q && null === v.alternate && b(e, q);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      q = B;\n    }\n\n    if (w.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !w.done; u++, w = h.next()) {\n        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !w.done; u++, w = h.next()) {\n      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === Xb && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Vb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === Xb ? f.props.children : f.props, h);\n                d.ref = Af(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case Wb:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = bf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);\n    if (zf(f)) return v(a, d, f, h);\n    if (hc(f)) return R(a, d, f, h);\n    l && Bf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, x(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar Df = Cf(!0),\n    Ef = Cf(!1),\n    Ff = {},\n    N = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? x(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  G(Hf, b, a);\n  G(Gf, a, a);\n  G(N, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : he(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);\n  }\n\n  F(N, a);\n  G(N, b, a);\n}\n\nfunction Kf(a) {\n  F(N, a);\n  F(Gf, a);\n  F(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(N.current);\n  var c = he(b, a.type);\n  b !== c && (G(Gf, a, a), G(N, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (F(N, a), F(Gf, a));\n}\n\nvar Nf = 0,\n    Of = 2,\n    Pf = 4,\n    Qf = 8,\n    Rf = 16,\n    Sf = 32,\n    Tf = 64,\n    Uf = 128,\n    Vf = Tb.ReactCurrentDispatcher,\n    Wf = 0,\n    Xf = null,\n    O = null,\n    P = null,\n    Yf = null,\n    Q = null,\n    Zf = null,\n    $f = 0,\n    ag = null,\n    bg = 0,\n    cg = !1,\n    dg = null,\n    eg = 0;\n\nfunction fg() {\n  x(\"321\");\n}\n\nfunction gg(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!bd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction hg(a, b, c, d, e, f) {\n  Wf = f;\n  Xf = b;\n  P = null !== a ? a.memoizedState : null;\n  Vf.current = null === P ? ig : jg;\n  b = c(d, e);\n\n  if (cg) {\n    do {\n      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);\n    } while (cg);\n\n    dg = null;\n    eg = 0;\n  }\n\n  Vf.current = kg;\n  a = Xf;\n  a.memoizedState = Yf;\n  a.expirationTime = $f;\n  a.updateQueue = ag;\n  a.effectTag |= bg;\n  a = null !== O && null !== O.next;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  a ? x(\"300\") : void 0;\n  return b;\n}\n\nfunction lg() {\n  Vf.current = kg;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  cg = !1;\n  dg = null;\n  eg = 0;\n}\n\nfunction mg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === Q ? Yf = Q = a : Q = Q.next = a;\n  return Q;\n}\n\nfunction ng() {\n  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {\n    null === P ? x(\"310\") : void 0;\n    O = P;\n    var a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      queue: O.queue,\n      baseUpdate: O.baseUpdate,\n      next: null\n    };\n    Q = null === Q ? Yf = a : Q.next = a;\n    P = O.next;\n  }\n  return Q;\n}\n\nfunction og(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction pg(a) {\n  var b = ng(),\n      c = b.queue;\n  null === c ? x(\"311\") : void 0;\n  c.lastRenderedReducer = a;\n\n  if (0 < eg) {\n    var d = c.dispatch;\n\n    if (null !== dg) {\n      var e = dg.get(c);\n\n      if (void 0 !== e) {\n        dg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        bd(f, b.memoizedState) || (qg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        c.lastRenderedState = f;\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    bd(f, b.memoizedState) || (qg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.lastRenderedState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction rg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === ag ? (ag = {\n    lastEffect: null\n  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));\n  return a;\n}\n\nfunction sg(a, b, c, d) {\n  var e = mg();\n  bg |= a;\n  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction tg(a, b, c, d) {\n  var e = ng();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && gg(d, g.deps)) {\n      rg(Nf, c, f, d);\n      return;\n    }\n  }\n\n  bg |= a;\n  e.memoizedState = rg(b, c, f, d);\n}\n\nfunction ug(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction vg() {}\n\nfunction wg(a, b, c) {\n  25 > eg ? void 0 : x(\"301\");\n  var d = a.alternate;\n  if (a === Xf || null !== d && d === Xf) {\n    if (cg = !0, a = {\n      expirationTime: Wf,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    of();\n    var e = lf();\n    e = mf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {\n      var l = b.lastRenderedState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (bd(k, l)) return;\n    } catch (m) {} finally {}\n    qf(a, e);\n  }\n}\n\nvar kg = {\n  readContext: M,\n  useCallback: fg,\n  useContext: fg,\n  useEffect: fg,\n  useImperativeHandle: fg,\n  useLayoutEffect: fg,\n  useMemo: fg,\n  useReducer: fg,\n  useRef: fg,\n  useState: fg,\n  useDebugValue: fg\n},\n    ig = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    mg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return sg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return sg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return sg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = mg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = mg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: a,\n      lastRenderedState: b\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = mg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = mg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: og,\n      lastRenderedState: a\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: vg\n},\n    jg = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return tg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return tg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return tg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: pg,\n  useRef: function useRef() {\n    return ng().memoizedState;\n  },\n  useState: function useState(a) {\n    return pg(og, a);\n  },\n  useDebugValue: vg\n},\n    xg = null,\n    yg = null,\n    zg = !1;\n\nfunction Ag(a, b) {\n  var c = K(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Bg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 13:\n      return !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Cg(a) {\n  if (zg) {\n    var b = yg;\n\n    if (b) {\n      var c = b;\n\n      if (!Bg(a, b)) {\n        b = De(c);\n\n        if (!b || !Bg(a, b)) {\n          a.effectTag |= 2;\n          zg = !1;\n          xg = a;\n          return;\n        }\n\n        Ag(xg, c);\n      }\n\n      xg = a;\n      yg = Ee(b);\n    } else a.effectTag |= 2, zg = !1, xg = a;\n  }\n}\n\nfunction Dg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {\n    a = a.return;\n  }\n\n  xg = a;\n}\n\nfunction Eg(a) {\n  if (a !== xg) return !1;\n  if (!zg) return Dg(a), zg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {\n    Ag(a, b), b = De(b);\n  }\n  Dg(a);\n  yg = xg ? De(a.stateNode) : null;\n  return !0;\n}\n\nfunction Fg() {\n  yg = xg = null;\n  zg = !1;\n}\n\nvar Gg = Tb.ReactCurrentOwner,\n    qg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);\n}\n\nfunction Hg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Ig(b, e);\n  d = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Kg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);\n    a = Ye(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);\n  b.effectTag |= 1;\n  a = Xe(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Lg(a, b, c, d, e, f) {\n  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);\n}\n\nfunction Ng(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Mg(a, b, c, d, e) {\n  var f = J(c) ? Ie : H.current;\n  f = Je(b, f);\n  Ig(b, e);\n  c = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Og(a, b, c, d, e) {\n  if (J(c)) {\n    var f = !0;\n    Oe(b);\n  } else f = !1;\n\n  Ig(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));\n    var m = c.getDerivedStateFromProps,\n        p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    p || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);\n    Pg = !1;\n    var t = b.memoizedState;\n    l = g.state = t;\n    var A = b.updateQueue;\n    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);\n    h !== d || t !== l || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Qg(a, b, c, d, f, e);\n}\n\nfunction Qg(a, b, c, d, e, f) {\n  Ng(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);\n  d = b.stateNode;\n  Gg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Pe(b, c, !0);\n  return b.child;\n}\n\nfunction Rg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction Sg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = Ze(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = Ze(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Ef(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Jg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? x(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = Xe(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Tg(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {\n      if (d < c) {\n        qg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Rg(b);\n            Fg();\n            break;\n\n          case 5:\n            Lf(b);\n            break;\n\n          case 1:\n            J(b.type) && Oe(b);\n            break;\n\n          case 4:\n            Jf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            Ug(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return Sg(a, b, c);\n              b = Jg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Jg(a, b, c);\n      }\n    }\n  } else qg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Je(b, H.current);\n      Ig(b, c);\n      e = hg(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        lg();\n\n        if (J(d)) {\n          var f = !0;\n          Oe(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && kf(b, d, g, a);\n        e.updater = tf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        xf(b, d, a, c);\n        b = Qg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = hf(e);\n      b.type = a;\n      e = b.tag = We(a);\n      f = L(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Mg(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Og(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Hg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Kg(null, b, a, L(a.type, f), d, c);\n          break;\n\n        default:\n          x(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);\n\n    case 3:\n      Rg(b);\n      d = b.updateQueue;\n      null === d ? x(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      yf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Fg(), b = Jg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;\n        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Cg(b), null;\n\n    case 13:\n      return Sg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Ug(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = bd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !I.current) {\n              b = Jg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n                  k = c;\n\n                  for (var m = h.return; null !== m;) {\n                    var p = m.alternate;\n                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);\n\n    case 15:\n      return Lg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);\n  }\n\n  x(\"156\");\n}\n\nvar Vg = {\n  current: null\n},\n    Wg = null,\n    Xg = null,\n    Yg = null;\n\nfunction Ug(a, b) {\n  var c = a.type._context;\n  G(Vg, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Zg(a) {\n  var b = Vg.current;\n  F(Vg, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Ig(a, b) {\n  Wg = a;\n  Yg = Xg = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (qg = !0);\n  a.contextDependencies = null;\n}\n\nfunction M(a, b) {\n  if (Yg !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === Xg ? (null === Wg ? x(\"308\") : void 0, Xg = b, Wg.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : Xg = Xg.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar $g = 0,\n    rf = 1,\n    sf = 2,\n    ah = 3,\n    Pg = !1;\n\nfunction bh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction ch(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: $g,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction dh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = bh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));\n\n  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);\n}\n\nfunction eh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction fh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));\n  return b;\n}\n\nfunction gh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case rf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ah:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case $g:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case sf:\n      Pg = !0;\n  }\n\n  return d;\n}\n\nfunction yf(a, b, c, d, e) {\n  Pg = !1;\n  b = fh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var p = l.expirationTime;\n    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction hh(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  ih(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  ih(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction ih(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction jh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: jc(b)\n  };\n}\n\nfunction kh(a) {\n  a.effectTag |= 4;\n}\n\nvar lh = void 0,\n    mh = void 0,\n    nh = void 0,\n    oh = void 0;\n\nlh = function lh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nmh = function mh() {};\n\nnh = function nh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(N.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = vc(g, f);\n        d = vc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = $d(g, f);\n        d = $d(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = be(g, f);\n        d = be(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = te);\n    }\n\n    qe(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && kh(b);\n  }\n};\n\noh = function oh(a, b, c, d) {\n  c !== d && kh(b);\n};\n\nvar ph = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction qh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = jc(c));\n  null !== c && ic(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && ic(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction rh(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    sh(a, c);\n  } else b.current = null;\n}\n\nfunction th(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Nf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction uh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = ne(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction vh(a) {\n  \"function\" === typeof Re && Re(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              sh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      rh(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        sh(a, f);\n      }\n      break;\n\n    case 5:\n      rh(a);\n      break;\n\n    case 4:\n      wh(a);\n  }\n}\n\nfunction xh(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction yh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (xh(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    x(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      x(\"161\");\n  }\n\n  c.effectTag & 16 && (ke(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || xh(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction wh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? x(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag) {\n      if (null !== b.child) {\n        d = b.stateNode.containerInfo;\n        e = !0;\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n    } else if (vh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction zh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      th(Pf, Qf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ce(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? x(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));\n      null !== a && uh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new ph());\n        c.forEach(function (a) {\n          var c = Ah.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      x(\"163\");\n  }\n}\n\nvar Bh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Ch(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Dh(d);\n    qh(a, b);\n  };\n\n  return c;\n}\n\nfunction Eh(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));\n    var c = b.value,\n        e = b.stack;\n    qh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Gh(a) {\n  switch (a.tag) {\n    case 1:\n      J(a.type) && Ke(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 18:\n      return null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Zg(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Hh = Tb.ReactCurrentDispatcher,\n    Ih = Tb.ReactCurrentOwner,\n    Jh = 1073741822,\n    Kh = !1,\n    T = null,\n    Lh = null,\n    U = 0,\n    Mh = -1,\n    Nh = !1,\n    V = null,\n    Oh = !1,\n    Ph = null,\n    Qh = null,\n    Rh = null,\n    Fh = null;\n\nfunction Sh() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ke(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Le(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Zg(b);\n    }\n\n    a = a.return;\n  }\n  Lh = null;\n  U = 0;\n  Mh = -1;\n  Nh = !1;\n  T = null;\n}\n\nfunction Th() {\n  for (; null !== V;) {\n    var a = V.effectTag;\n    a & 16 && ke(V.stateNode, \"\");\n\n    if (a & 128) {\n      var b = V.alternate;\n      null !== b && (b = b.ref, null !== b && (\"function\" === typeof b ? b(null) : b.current = null));\n    }\n\n    switch (a & 14) {\n      case 2:\n        yh(V);\n        V.effectTag &= -3;\n        break;\n\n      case 6:\n        yh(V);\n        V.effectTag &= -3;\n        zh(V.alternate, V);\n        break;\n\n      case 4:\n        zh(V.alternate, V);\n        break;\n\n      case 8:\n        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);\n    }\n\n    V = V.nextEffect;\n  }\n}\n\nfunction Uh() {\n  for (; null !== V;) {\n    if (V.effectTag & 256) a: {\n      var a = V.alternate,\n          b = V;\n\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Of, Nf, b);\n          break a;\n\n        case 1:\n          if (b.effectTag & 256 && null !== a) {\n            var c = a.memoizedProps,\n                d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n          }\n\n          break a;\n\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break a;\n\n        default:\n          x(\"163\");\n      }\n    }\n    V = V.nextEffect;\n  }\n}\n\nfunction Vh(a, b) {\n  for (; null !== V;) {\n    var c = V.effectTag;\n\n    if (c & 36) {\n      var d = V.alternate,\n          e = V,\n          f = b;\n\n      switch (e.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Rf, Sf, e);\n          break;\n\n        case 1:\n          var g = e.stateNode;\n          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {\n            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);\n            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);\n          }\n          d = e.updateQueue;\n          null !== d && hh(e, d, g, f);\n          break;\n\n        case 3:\n          d = e.updateQueue;\n\n          if (null !== d) {\n            g = null;\n            if (null !== e.child) switch (e.child.tag) {\n              case 5:\n                g = e.child.stateNode;\n                break;\n\n              case 1:\n                g = e.child.stateNode;\n            }\n            hh(e, d, g, f);\n          }\n\n          break;\n\n        case 5:\n          f = e.stateNode;\n          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();\n          break;\n\n        case 6:\n          break;\n\n        case 4:\n          break;\n\n        case 12:\n          break;\n\n        case 13:\n          break;\n\n        case 17:\n          break;\n\n        default:\n          x(\"163\");\n      }\n    }\n\n    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, \"function\" === typeof e ? e(f) : e.current = f));\n    c & 512 && (Ph = a);\n    V = V.nextEffect;\n  }\n}\n\nfunction Wh(a, b) {\n  Rh = Qh = Ph = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        th(Uf, Nf, f);\n        th(Nf, Tf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && sh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && Xh(a, c);\n  X || W || Yh(1073741823, !1);\n}\n\nfunction of() {\n  null !== Qh && Be(Qh);\n  null !== Rh && Rh();\n}\n\nfunction Zh(a, b) {\n  Oh = Kh = !0;\n  a.current === b ? x(\"177\") : void 0;\n  var c = a.pendingCommitExpirationTime;\n  0 === c ? x(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  var d = b.expirationTime,\n      e = b.childExpirationTime;\n  ef(a, e > d ? e : d);\n  Ih.current = null;\n  d = void 0;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ue = Bd;\n  ve = Pd();\n  Bd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    var f = void 0;\n\n    try {\n      Uh();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Th();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  Qd(ve);\n  ve = null;\n  Bd = !!ue;\n  ue = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Vh(a, c);\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  if (null !== d && null !== Ph) {\n    var g = Wh.bind(null, a, d);\n    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {\n      return Ae(g);\n    });\n    Rh = g;\n  }\n\n  Kh = Oh = !1;\n  \"function\" === typeof Qe && Qe(b.stateNode);\n  c = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > c ? b : c;\n  0 === b && (Fh = null);\n  $h(a, b);\n}\n\nfunction ai(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            J(b.type) && Ke(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Le(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;\n            mh(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = If(N.current);\n\n              if (Eg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    p = h;\n                e[Fa] = g;\n                e[Ga] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < ab.length; k++) {\n                      E(ab[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    E(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", e);\n                    E(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", e);\n                    E(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    wc(e, m);\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(e, m), E(\"invalid\", e), se(p, \"onChange\");\n                }\n\n                qe(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Rb(e);\n                    Ac(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Rb(e);\n                    ee(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = te);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && kh(b);\n              } else {\n                m = b;\n                p = f;\n                e = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === fe.html && (l = ge(p));\n                l === fe.html ? \"script\" === p ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof e.is ? k = k.createElement(p, {\n                  is: e.is\n                }) : (k = k.createElement(p), \"select\" === p && (p = k, e.multiple ? p.multiple = !0 : e.size && (p.size = e.size))) : k = k.createElementNS(l, p);\n                e = k;\n                e[Fa] = m;\n                e[Ga] = g;\n                lh(e, b, !1, !1);\n                p = e;\n                k = f;\n                m = g;\n                var t = h,\n                    A = re(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < ab.length; h++) {\n                      E(ab[h], p);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    E(\"error\", p);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", p);\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", p);\n                    E(\"submit\", p);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", p);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    wc(p, m);\n                    h = vc(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = $d(p, m);\n                    break;\n\n                  case \"select\":\n                    p._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(p, m);\n                    h = be(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                qe(k, h);\n                l = void 0;\n                var v = k,\n                    R = p,\n                    u = h;\n\n                for (l in u) {\n                  if (u.hasOwnProperty(l)) {\n                    var q = u[l];\n                    \"style\" === l ? oe(R, q) : \"dangerouslySetInnerHTML\" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : \"children\" === l ? \"string\" === typeof q ? (\"textarea\" !== v || \"\" !== q) && ke(R, q) : \"number\" === typeof q && ke(R, \"\" + q) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Rb(p);\n                    Ac(p, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Rb(p);\n                    ee(p, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && p.setAttribute(\"value\", \"\" + uc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = p;\n                    h.multiple = !!m.multiple;\n                    p = m.value;\n                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (p.onclick = te);\n                }\n\n                (g = we(f, g)) && kh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? x(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? x(\"166\") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            mh(b);\n            break;\n\n          case 10:\n            Zg(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            J(b.type) && Ke(b);\n            break;\n\n          case 18:\n            break;\n\n          default:\n            x(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Gh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction bi(a) {\n  var b = Tg(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = ai(a));\n  Ih.current = null;\n  return b;\n}\n\nfunction ci(a, b) {\n  Kh ? x(\"243\") : void 0;\n  of();\n  Kh = !0;\n  var c = Hh.current;\n  Hh.current = kg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !di();) {\n        T = bi(T);\n      } else for (; null !== T;) {\n        T = bi(T);\n      }\n    } catch (u) {\n      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {\n        null === T ? x(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Dh(u);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = u;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var p = m;\n              m = l;\n              var t = -1,\n                  A = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var v = m.alternate;\n\n                  if (null !== v && (v = v.memoizedState, null !== v)) {\n                    A = 10 * (1073741822 - v.timedOutAt);\n                    break;\n                  }\n\n                  v = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (v) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h;\n                  l = g;\n                  var R = k.pingCache;\n                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));\n                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));\n                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);\n                  0 <= h && Mh < h && (Mh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((ic(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + jc(k));\n            }\n\n            Nh = !0;\n            m = jh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Ch(h, m, g);\n                  eh(h, g);\n                  break a;\n\n                case 1:\n                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof A.getDerivedStateFromError || null !== k && \"function\" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Eh(h, t, g);\n                    eh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = ai(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Kh = !1;\n  Hh.current = c;\n  Yg = Xg = Wg = null;\n  lg();\n  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? x(\"281\") : void 0;\n    Lh = null;\n\n    if (Nh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        ff(a, d);\n        fi(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        fi(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction sh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {\n          a = jh(b, a);\n          a = Eh(c, a, 1073741823);\n          pf(c, a);\n          qf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = jh(b, a);\n        a = Ch(c, a, 1073741823);\n        pf(c, a);\n        qf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));\n}\n\nfunction mf(a, b) {\n  var c = r.unstable_getCurrentPriorityLevel(),\n      d = void 0;\n  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {\n    switch (c) {\n      case r.unstable_ImmediatePriority:\n        d = 1073741823;\n        break;\n\n      case r.unstable_UserBlockingPriority:\n        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);\n        break;\n\n      case r.unstable_NormalPriority:\n        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);\n        break;\n\n      case r.unstable_LowPriority:\n      case r.unstable_IdlePriority:\n        d = 1;\n        break;\n\n      default:\n        x(\"313\");\n    }\n\n    null !== Lh && d === U && --d;\n  }\n  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);\n  return d;\n}\n\nfunction ei(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    df(c, a);\n    c = a.expirationTime;\n    0 !== c && Xh(a, c);\n  }\n}\n\nfunction Ah(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = lf();\n  b = mf(b, a);\n  a = hi(a, b);\n  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));\n}\n\nfunction hi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction qf(a, b) {\n  a = hi(a, b);\n  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x(\"185\")));\n}\n\nfunction ki(a, b, c, d, e) {\n  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    return a(b, c, d, e);\n  });\n}\n\nvar li = null,\n    Y = null,\n    mi = 0,\n    ni = void 0,\n    W = !1,\n    oi = null,\n    Z = 0,\n    gi = 0,\n    pi = !1,\n    qi = null,\n    X = !1,\n    ri = !1,\n    si = null,\n    ti = r.unstable_now(),\n    ui = 1073741822 - (ti / 10 | 0),\n    vi = ui,\n    ji = 50,\n    ii = 0,\n    wi = null;\n\nfunction xi() {\n  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);\n}\n\nfunction yi(a, b) {\n  if (0 !== mi) {\n    if (b < mi) return;\n    null !== ni && r.unstable_cancelCallback(ni);\n  }\n\n  mi = b;\n  a = r.unstable_now() - ti;\n  ni = r.unstable_scheduleCallback(zi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction fi(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Ai(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  xi();\n  vi = ui;\n  Bi(a, c);\n}\n\nfunction $h(a, b) {\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction lf() {\n  if (W) return vi;\n  Ci();\n  if (0 === Z || 1 === Z) xi(), vi = ui;\n  return vi;\n}\n\nfunction Xh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));\n}\n\nfunction Ci() {\n  var a = 0,\n      b = null;\n  if (null !== Y) for (var c = Y, d = li; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === Y ? x(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        li = Y = d.nextScheduledRoot = null;\n        break;\n      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {\n        Y = c;\n        Y.nextScheduledRoot = li;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === Y) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  oi = b;\n  Z = a;\n}\n\nvar Ei = !1;\n\nfunction di() {\n  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;\n}\n\nfunction zi() {\n  try {\n    if (!di() && null !== li) {\n      xi();\n      var a = li;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);\n        a = a.nextScheduledRoot;\n      } while (a !== li);\n    }\n\n    Yh(0, !0);\n  } finally {\n    Ei = !1;\n  }\n}\n\nfunction Yh(a, b) {\n  Ci();\n  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {\n    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;\n  } else for (; null !== oi && 0 !== Z && a <= Z;) {\n    Di(oi, Z, !1), Ci();\n  }\n  b && (mi = 0, ni = null);\n  0 !== Z && yi(oi, Z);\n  ii = 0;\n  wi = null;\n  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      pi || (pi = !0, qi = d);\n    }\n  }\n  if (pi) throw a = qi, qi = null, pi = !1, a;\n}\n\nfunction Bi(a, b) {\n  W ? x(\"253\") : void 0;\n  oi = a;\n  Z = b;\n  Di(a, b, !1);\n  Yh(1073741823, !1);\n}\n\nfunction Di(a, b, c) {\n  W ? x(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));\n\n  W = !1;\n}\n\nfunction Fi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === wi ? ii++ : (wi = a, ii = 0);\n  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    Zh(a, b);\n  });\n}\n\nfunction Dh(a) {\n  null === oi ? x(\"246\") : void 0;\n  oi.expirationTime = 0;\n  pi || (pi = !0, qi = a);\n}\n\nfunction Gi(a, b) {\n  var c = X;\n  X = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (X = c) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Hi(a, b) {\n  if (X && !ri) {\n    ri = !0;\n\n    try {\n      return a(b);\n    } finally {\n      ri = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ii(a, b, c) {\n  X || W || 0 === gi || (Yh(gi, !1), gi = 0);\n  var d = X;\n  X = !0;\n\n  try {\n    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {\n      return a(b, c);\n    });\n  } finally {\n    (X = d) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Ji(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === ed(c) && 1 === c.tag ? void 0 : x(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (J(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      x(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (J(h)) {\n        c = Ne(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = He;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  of();\n  pf(f, e);\n  qf(f, d);\n  return d;\n}\n\nfunction Ki(a, b, c, d) {\n  var e = b.current,\n      f = lf();\n  e = mf(f, e);\n  return Ji(a, b, c, e, d);\n}\n\nfunction Li(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Mi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: Wb,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nAb = function Ab(a, b, c) {\n  switch (b) {\n    case \"input\":\n      yc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ka(d);\n            e ? void 0 : x(\"90\");\n            Sb(d);\n            yc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      de(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ae(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Ni(a) {\n  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);\n  b >= Jh && (b = Jh - 1);\n  this._expirationTime = Jh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nNi.prototype.render = function (a) {\n  this._defer ? void 0 : x(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Oi();\n  Ji(a, b, null, c, d._onCommit);\n  return d;\n};\n\nNi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nNi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : x(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? x(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Bi(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nNi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Oi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nOi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nOi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Pi(a, b, c) {\n  b = K(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nPi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Oi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ki(a, c, null, d._onCommit);\n  return d;\n};\n\nPi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Oi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ki(null, b, null, c._onCommit);\n  return c;\n};\n\nPi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Oi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ki(b, d, a, e._onCommit);\n  return e;\n};\n\nPi.prototype.createBatch = function () {\n  var a = new Ni(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Qi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nGb = Gi;\nHb = Ii;\n\nIb = function Ib() {\n  W || 0 === gi || (Yh(gi, !1), gi = 0);\n};\n\nfunction Ri(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Pi(a, !1, b);\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = Ri(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Hi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Li(f._internalRoot);\n}\n\nfunction Ti(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Qi(b) ? void 0 : x(\"200\");\n  return Mi(a, b, null, c);\n}\n\nvar Vi = {\n  createPortal: Ti,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? x(\"188\") : x(\"268\", Object.keys(a)));\n    a = hd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Qi(c) ? void 0 : x(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? x(\"38\") : void 0;\n    return Si(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Qi(a) ? void 0 : x(\"40\");\n    return a._reactRootContainer ? (Hi(function () {\n      Si(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return Ti.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Gi,\n  unstable_interactiveUpdates: Ii,\n  flushSync: function flushSync(a, b) {\n    W ? x(\"187\") : void 0;\n    var c = X;\n    X = !0;\n\n    try {\n      return ki(a, b);\n    } finally {\n      X = c, Yh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: Ui,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = X;\n    X = !0;\n\n    try {\n      ki(a);\n    } finally {\n      (X = b) || W || Yh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {\n      ya(a, Pa);\n    }, Eb, Fb, Dd, Da]\n  }\n};\n\nfunction Ui(a, b) {\n  Qi(a) ? void 0 : x(\"299\", \"unstable_createRoot\");\n  return new Pi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Te(n({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Tb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = hd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ha,\n  bundleType: 0,\n  version: \"16.8.6\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar Wi = {\n  default: Vi\n},\n    Xi = Wi && Vi || Wi;\nmodule.exports = Xi.default || Xi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar d = null,\n    e = !1,\n    g = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = d.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = d,\n      b = d.next;\n  if (d === b) d = null;else {\n    var c = d.previous;\n    d = c.next = b;\n    b.previous = c;\n  }\n  a.next = a.previous = null;\n  c = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var f = g,\n      Q = l;\n  g = a;\n  l = b;\n\n  try {\n    var h = c();\n  } finally {\n    g = f, l = Q;\n  }\n\n  if (\"function\" === typeof h) if (h = {\n    callback: h,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === d) d = h.next = h.previous = h;else {\n    c = null;\n    a = d;\n\n    do {\n      if (a.expirationTime >= b) {\n        c = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== d);\n\n    null === c ? c = d : c === d && (d = h, p());\n    b = c.previous;\n    b.next = c.previous = h;\n    h.next = c;\n    h.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== d && 1 === d.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== d && 1 === d.priorityLevel);\n    } finally {\n      m = !1, null !== d ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = e;\n  e = a;\n\n  try {\n    if (a) for (; null !== d;) {\n      var c = exports.unstable_now();\n\n      if (d.expirationTime <= c) {\n        do {\n          u();\n        } while (null !== d && d.expirationTime <= c);\n      } else break;\n    } else if (null !== d) {\n      do {\n        u();\n      } while (null !== d && !w());\n    }\n  } finally {\n    m = !1, e = b, null !== d ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var c = exports.unstable_now(),\n        f = !1;\n    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(f);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var c = g,\n      f = k;\n  g = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_next = function (a) {\n  switch (g) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n\n    default:\n      b = g;\n  }\n\n  var c = g,\n      f = k;\n  g = b;\n  k = exports.unstable_now();\n\n  try {\n    return a();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var c = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = c + b.timeout;else switch (g) {\n    case 1:\n      b = c + -1;\n      break;\n\n    case 2:\n      b = c + 250;\n      break;\n\n    case 5:\n      b = c + 1073741823;\n      break;\n\n    case 4:\n      b = c + 1E4;\n      break;\n\n    default:\n      b = c + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: g,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === d) d = a.next = a.previous = a, p();else {\n    c = null;\n    var f = d;\n\n    do {\n      if (f.expirationTime > b) {\n        c = f;\n        break;\n      }\n\n      f = f.next;\n    } while (f !== d);\n\n    null === c ? c = d : c === d && (d = a, p());\n    b = c.previous;\n    b.next = c.previous = a;\n    a.next = c;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) d = null;else {\n      a === d && (d = b);\n      var c = a.previous;\n      c.next = b;\n      b.previous = c;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = g;\n  return function () {\n    var c = g,\n        f = k;\n    g = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      g = c, k = f, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return g;\n};\n\nexports.unstable_shouldYield = function () {\n  return !e && (null !== d && d.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== d && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return d;\n};","module.exports = isFunction;\nvar toString = Object.prototype.toString;\n\nfunction isFunction(fn) {\n  var string = toString.call(fn);\n  return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n  fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n}\n\n;","var trim = require('string.prototype.trim'),\n    forEach = require('for-each'),\n    isArray = function isArray(arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nmodule.exports = function (headers) {\n  if (!headers) return {};\n  var result = {};\n  forEach(trim(headers).split('\\n'), function (row) {\n    var index = row.indexOf(':'),\n        key = trim(row.slice(0, index)).toLowerCase(),\n        value = trim(row.slice(index + 1));\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};","'use strict';\n\nvar bind = require('function-bind');\n\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\n\nvar getPolyfill = require('./polyfill');\n\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\ndefine(boundTrim, {\n  getPolyfill: getPolyfill,\n  implementation: implementation,\n  shim: shim\n});\nmodule.exports = boundTrim;","'use strict';\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n  var target = this;\n\n  if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + target);\n  }\n\n  var args = slice.call(arguments, 1);\n  var bound;\n\n  var binder = function binder() {\n    if (this instanceof bound) {\n      var result = target.apply(this, args.concat(slice.call(arguments)));\n\n      if (Object(result) === result) {\n        return result;\n      }\n\n      return this;\n    } else {\n      return target.apply(that, args.concat(slice.call(arguments)));\n    }\n  };\n\n  var boundLength = Math.max(0, target.length - args.length);\n  var boundArgs = [];\n\n  for (var i = 0; i < boundLength; i++) {\n    boundArgs.push('$' + i);\n  }\n\n  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n  if (target.prototype) {\n    var Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    bound.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return bound;\n};","'use strict';\n\nvar slice = Array.prototype.slice;\n\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) {\n  return origKeys(o);\n} : require('./implementation');\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n  if (Object.keys) {\n    var keysWorksWithArguments = function () {\n      // Safari 5.0 bug\n      var args = Object.keys(arguments);\n      return args && args.length === arguments.length;\n    }(1, 2);\n\n    if (!keysWorksWithArguments) {\n      Object.keys = function keys(object) {\n        // eslint-disable-line func-name-matching\n        if (isArgs(object)) {\n          return originalKeys(slice.call(object));\n        }\n\n        return originalKeys(object);\n      };\n    }\n  } else {\n    Object.keys = keysShim;\n  }\n\n  return Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;","'use strict';\n\nvar keysShim;\n\nif (!Object.keys) {\n  // modified from https://github.com/es-shims/es5-shim\n  var has = Object.prototype.hasOwnProperty;\n  var toStr = Object.prototype.toString;\n\n  var isArgs = require('./isArguments'); // eslint-disable-line global-require\n\n\n  var isEnumerable = Object.prototype.propertyIsEnumerable;\n  var hasDontEnumBug = !isEnumerable.call({\n    toString: null\n  }, 'toString');\n  var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n  var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n\n  var equalsConstructorPrototype = function equalsConstructorPrototype(o) {\n    var ctor = o.constructor;\n    return ctor && ctor.prototype === o;\n  };\n\n  var excludedKeys = {\n    $applicationCache: true,\n    $console: true,\n    $external: true,\n    $frame: true,\n    $frameElement: true,\n    $frames: true,\n    $innerHeight: true,\n    $innerWidth: true,\n    $onmozfullscreenchange: true,\n    $onmozfullscreenerror: true,\n    $outerHeight: true,\n    $outerWidth: true,\n    $pageXOffset: true,\n    $pageYOffset: true,\n    $parent: true,\n    $scrollLeft: true,\n    $scrollTop: true,\n    $scrollX: true,\n    $scrollY: true,\n    $self: true,\n    $webkitIndexedDB: true,\n    $webkitStorageInfo: true,\n    $window: true\n  };\n\n  var hasAutomationEqualityBug = function () {\n    /* global window */\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    for (var k in window) {\n      try {\n        if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n          try {\n            equalsConstructorPrototype(window[k]);\n          } catch (e) {\n            return true;\n          }\n        }\n      } catch (e) {\n        return true;\n      }\n    }\n\n    return false;\n  }();\n\n  var equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {\n    /* global window */\n    if (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n      return equalsConstructorPrototype(o);\n    }\n\n    try {\n      return equalsConstructorPrototype(o);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  keysShim = function keys(object) {\n    var isObject = object !== null && typeof object === 'object';\n    var isFunction = toStr.call(object) === '[object Function]';\n    var isArguments = isArgs(object);\n    var isString = isObject && toStr.call(object) === '[object String]';\n    var theKeys = [];\n\n    if (!isObject && !isFunction && !isArguments) {\n      throw new TypeError('Object.keys called on a non-object');\n    }\n\n    var skipProto = hasProtoEnumBug && isFunction;\n\n    if (isString && object.length > 0 && !has.call(object, 0)) {\n      for (var i = 0; i < object.length; ++i) {\n        theKeys.push(String(i));\n      }\n    }\n\n    if (isArguments && object.length > 0) {\n      for (var j = 0; j < object.length; ++j) {\n        theKeys.push(String(j));\n      }\n    } else {\n      for (var name in object) {\n        if (!(skipProto && name === 'prototype') && has.call(object, name)) {\n          theKeys.push(String(name));\n        }\n      }\n    }\n\n    if (hasDontEnumBug) {\n      var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n      for (var k = 0; k < dontEnums.length; ++k) {\n        if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n          theKeys.push(dontEnums[k]);\n        }\n      }\n    }\n\n    return theKeys;\n  };\n}\n\nmodule.exports = keysShim;","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\n\nvar $isNaN = require('./helpers/isNaN');\n\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\n\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\n\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has'); // https://es5.github.io/#x9\n\n\nvar ES5 = {\n  ToPrimitive: toPrimitive,\n  ToBoolean: function ToBoolean(value) {\n    return !!value;\n  },\n  ToNumber: function ToNumber(value) {\n    return +value; // eslint-disable-line no-implicit-coercion\n  },\n  ToInteger: function ToInteger(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number)) {\n      return 0;\n    }\n\n    if (number === 0 || !$isFinite(number)) {\n      return number;\n    }\n\n    return sign(number) * Math.floor(Math.abs(number));\n  },\n  ToInt32: function ToInt32(x) {\n    return this.ToNumber(x) >> 0;\n  },\n  ToUint32: function ToUint32(x) {\n    return this.ToNumber(x) >>> 0;\n  },\n  ToUint16: function ToUint16(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n      return 0;\n    }\n\n    var posInt = sign(number) * Math.floor(Math.abs(number));\n    return mod(posInt, 0x10000);\n  },\n  ToString: function ToString(value) {\n    return $String(value);\n  },\n  ToObject: function ToObject(value) {\n    this.CheckObjectCoercible(value);\n    return $Object(value);\n  },\n  CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n    /* jshint eqnull:true */\n    if (value == null) {\n      throw new $TypeError(optMessage || 'Cannot call method on ' + value);\n    }\n\n    return value;\n  },\n  IsCallable: IsCallable,\n  SameValue: function SameValue(x, y) {\n    if (x === y) {\n      // 0 === -0, but they are not identical.\n      if (x === 0) {\n        return 1 / x === 1 / y;\n      }\n\n      return true;\n    }\n\n    return $isNaN(x) && $isNaN(y);\n  },\n  // https://www.ecma-international.org/ecma-262/5.1/#sec-8\n  Type: function Type(x) {\n    if (x === null) {\n      return 'Null';\n    }\n\n    if (typeof x === 'undefined') {\n      return 'Undefined';\n    }\n\n    if (typeof x === 'function' || typeof x === 'object') {\n      return 'Object';\n    }\n\n    if (typeof x === 'number') {\n      return 'Number';\n    }\n\n    if (typeof x === 'boolean') {\n      return 'Boolean';\n    }\n\n    if (typeof x === 'string') {\n      return 'String';\n    }\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n    if (this.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n  IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n  IsDataDescriptor: function IsDataDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n  IsGenericDescriptor: function IsGenericDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n      return true;\n    }\n\n    return false;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n  FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return Desc;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (this.IsDataDescriptor(Desc)) {\n      return {\n        value: Desc['[[Value]]'],\n        writable: !!Desc['[[Writable]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else if (this.IsAccessorDescriptor(Desc)) {\n      return {\n        get: Desc['[[Get]]'],\n        set: Desc['[[Set]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else {\n      throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n    }\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n  ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n    if (this.Type(Obj) !== 'Object') {\n      throw new $TypeError('ToPropertyDescriptor requires an object');\n    }\n\n    var desc = {};\n\n    if (has(Obj, 'enumerable')) {\n      desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n    }\n\n    if (has(Obj, 'configurable')) {\n      desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n    }\n\n    if (has(Obj, 'value')) {\n      desc['[[Value]]'] = Obj.value;\n    }\n\n    if (has(Obj, 'writable')) {\n      desc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n    }\n\n    if (has(Obj, 'get')) {\n      var getter = Obj.get;\n\n      if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n        throw new TypeError('getter must be a function');\n      }\n\n      desc['[[Get]]'] = getter;\n    }\n\n    if (has(Obj, 'set')) {\n      var setter = Obj.set;\n\n      if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n        throw new $TypeError('setter must be a function');\n      }\n\n      desc['[[Set]]'] = setter;\n    }\n\n    if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n      throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n    }\n\n    return desc;\n  }\n};\nmodule.exports = ES5;","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n\n  console.log(predicate(ES, value), value);\n};","module.exports = Number.isNaN || function isNaN(a) {\n  return a !== a;\n};","var $isNaN = Number.isNaN || function (a) {\n  return a !== a;\n};\n\nmodule.exports = Number.isFinite || function (x) {\n  return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity;\n};","module.exports = function sign(number) {\n  return number >= 0 ? 1 : -1;\n};","module.exports = function mod(number, modulo) {\n  var remain = number % modulo;\n  return Math.floor(remain >= 0 ? remain : remain + modulo);\n};","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable'); // http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\n\n\nvar ES5internalSlots = {\n  '[[DefaultValue]]': function DefaultValue(O) {\n    var actualHint;\n\n    if (arguments.length > 1) {\n      actualHint = arguments[1];\n    } else {\n      actualHint = toStr.call(O) === '[object Date]' ? String : Number;\n    }\n\n    if (actualHint === String || actualHint === Number) {\n      var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n      var value, i;\n\n      for (i = 0; i < methods.length; ++i) {\n        if (isCallable(O[methods[i]])) {\n          value = O[methods[i]]();\n\n          if (isPrimitive(value)) {\n            return value;\n          }\n        }\n      }\n\n      throw new TypeError('No default value');\n    }\n\n    throw new TypeError('invalid [[DefaultValue]] hint supplied');\n  }\n}; // http://ecma-international.org/ecma-262/5.1/#sec-9.1\n\nmodule.exports = function ToPrimitive(input) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  if (arguments.length > 1) {\n    return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n  }\n\n  return ES5internalSlots['[[DefaultValue]]'](input);\n};","module.exports = function isPrimitive(value) {\n  return value === null || typeof value !== 'function' && typeof value !== 'object';\n};","'use strict';\n\nvar define = require('define-properties');\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n  var polyfill = getPolyfill();\n  define(String.prototype, {\n    trim: polyfill\n  }, {\n    trim: function trim() {\n      return String.prototype.trim !== polyfill;\n    }\n  });\n  return polyfill;\n};","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (hasOwnProperty.call(array, i)) {\n      if (receiver == null) {\n        iterator(array[i], i, array);\n      } else {\n        iterator.call(receiver, array[i], i, array);\n      }\n    }\n  }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n  for (var i = 0, len = string.length; i < len; i++) {\n    // no such thing as a sparse string.\n    if (receiver == null) {\n      iterator(string.charAt(i), i, string);\n    } else {\n      iterator.call(receiver, string.charAt(i), i, string);\n    }\n  }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n  for (var k in object) {\n    if (hasOwnProperty.call(object, k)) {\n      if (receiver == null) {\n        iterator(object[k], k, object);\n      } else {\n        iterator.call(receiver, object[k], k, object);\n      }\n    }\n  }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n  if (!isCallable(iterator)) {\n    throw new TypeError('iterator must be a function');\n  }\n\n  var receiver;\n\n  if (arguments.length >= 3) {\n    receiver = thisArg;\n  }\n\n  if (toStr.call(list) === '[object Array]') {\n    forEachArray(list, iterator, receiver);\n  } else if (typeof list === 'string') {\n    forEachString(list, iterator, receiver);\n  } else {\n    forEachObject(list, iterator, receiver);\n  }\n};\n\nmodule.exports = forEach;","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || function () {\n  function F() {}\n\n  return function (o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n\n    F.prototype = o;\n    return new F();\n  };\n}(); // Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\n\n\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\n\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n}; // Try to parse input as a time stamp.\n\nfunction parseTimeStamp(input) {\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0, m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n} // A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\n\n\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function set(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function get(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function has(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function alt(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function integer(k, v) {\n    if (/^-?\\d+$/.test(v)) {\n      // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function percent(k, v) {\n    var m;\n\n    if (m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n      v = parseFloat(v);\n\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n\n    return false;\n  }\n}; // Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\n\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n\n    var kv = groups[i].split(keyValueDelim);\n\n    if (kv.length !== 2) {\n      continue;\n    }\n\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input; // 4.1 WebVTT timestamp\n\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n    } // Remove time stamp from input.\n\n\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  } // 4.4.2 WebVTT cue settings\n\n\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n    parseOptions(input, function (k, v) {\n      switch (k) {\n        case \"region\":\n          // Find the last region we parsed with the same region id.\n          for (var i = regionList.length - 1; i >= 0; i--) {\n            if (regionList[i].id === v) {\n              settings.set(k, regionList[i].region);\n              break;\n            }\n          }\n\n          break;\n\n        case \"vertical\":\n          settings.alt(k, v, [\"rl\", \"lr\"]);\n          break;\n\n        case \"line\":\n          var vals = v.split(\",\"),\n              vals0 = vals[0];\n          settings.integer(k, vals0);\n          settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n          settings.alt(k, vals0, [\"auto\"]);\n\n          if (vals.length === 2) {\n            settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"position\":\n          vals = v.split(\",\");\n          settings.percent(k, vals[0]);\n\n          if (vals.length === 2) {\n            settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"size\":\n          settings.percent(k, v);\n          break;\n\n        case \"align\":\n          settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n          break;\n      }\n    }, /:/, /\\s/); // Apply default values for any missing fields.\n\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  } // 4.1 WebVTT cue timings.\n\n\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n  skipWhitespace();\n\n  if (input.substr(0, 3) !== \"-->\") {\n    // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n  }\n\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n  // 4.1 WebVTT cue settings list.\n\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200E\",\n  \"&rlm;\": \"\\u200F\",\n  \"&nbsp;\": \"\\xA0\"\n};\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n}; // Parse content into a document fragment.\n\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    } // Consume 'n' characters from the input.\n\n\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n\n    return consume(m[1] ? m[1] : m[2]);\n  } // Unescape a string 's'.\n\n\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n\n  function unescape(s) {\n    while (m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)) {\n      s = s.replace(m[0], unescape1);\n    }\n\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n  } // Create an element for this tag.\n\n\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n\n    if (!tagName) {\n      return null;\n    }\n\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        } // Otherwise just ignore the end tag.\n\n\n        continue;\n      }\n\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n      if (!m) {\n        continue;\n      } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n      node = createElement(m[1], m[3]);\n\n      if (!node) {\n        continue;\n      } // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n\n\n      if (!shouldAdd(current, node)) {\n        continue;\n      } // Set the class list (as a list of classes, separated by space).\n\n\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      } // Append the node to the current node, and enter the scope of the new\n      // node.\n\n\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    } // Text nodes are leaf nodes.\n\n\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n} // This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n\n      return text;\n    }\n\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n\n  while (text = nextTextNode(nodeStack)) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n    return cue.line;\n  }\n\n  if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n\n  return ++count * -1;\n}\n\nfunction StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\n\n\nStyleBox.prototype.applyStyles = function (styles, div) {\n  div = div || this.div;\n\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function (val, unit) {\n  return val === 0 ? 0 : val + unit;\n}; // Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\n\n\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n  this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n\n  var textPos = 0;\n\n  switch (cue.positionAlign) {\n    case \"start\":\n      textPos = cue.position;\n      break;\n\n    case \"middle\":\n      textPos = cue.position - cue.size / 2;\n      break;\n\n    case \"end\":\n      textPos = cue.position - cue.size;\n      break;\n  } // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n\n\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left: this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    }); // Vertical box orientation; textPos is the distance from the top edge of the\n    // area to the top edge of the box and cue.size is the height extending\n    // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function (box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\n\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\n\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n\n    lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n  }\n\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || top + (obj.height || height);\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n} // Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\n\n\nBoxPosition.prototype.move = function (axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n  switch (axis) {\n    case \"+x\":\n      this.left += toMove;\n      this.right += toMove;\n      break;\n\n    case \"-x\":\n      this.left -= toMove;\n      this.right -= toMove;\n      break;\n\n    case \"+y\":\n      this.top += toMove;\n      this.bottom += toMove;\n      break;\n\n    case \"-y\":\n      this.top -= toMove;\n      this.bottom -= toMove;\n      break;\n  }\n}; // Check if this box overlaps another box, b2.\n\n\nBoxPosition.prototype.overlaps = function (b2) {\n  return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n}; // Check if this box overlaps any other boxes in boxes.\n\n\nBoxPosition.prototype.overlapsAny = function (boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // Check if this box is within another box.\n\n\nBoxPosition.prototype.within = function (container) {\n  return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n}; // Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\n\n\nBoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n  switch (axis) {\n    case \"+x\":\n      return this.left < container.left;\n\n    case \"-x\":\n      return this.right > container.right;\n\n    case \"+y\":\n      return this.top < container.top;\n\n    case \"-y\":\n      return this.bottom > container.bottom;\n  }\n}; // Find the percentage of the area that this box is overlapping with another\n// box.\n\n\nBoxPosition.prototype.intersectPercentage = function (b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n}; // Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\n\n\nBoxPosition.prototype.toCSSCompatValues = function (reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n}; // Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\nBoxPosition.getSimpleBoxPosition = function (obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n  obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || top + (obj.height || height),\n    width: obj.width || width\n  };\n  return ret;\n}; // Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\n\n\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n        b.move(axis[i]);\n      } // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n\n\n      if (b.within(containerBox)) {\n        return b;\n      }\n\n      var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      } // Reset the box position to the specified position.\n\n\n      b = new BoxPosition(specifiedPosition);\n    }\n\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = []; // If we have a line number to align the cue to.\n\n  if (cue.snapToLines) {\n    var size;\n\n    switch (cue.vertical) {\n      case \"\":\n        axis = [\"+y\", \"-y\"];\n        size = \"height\";\n        break;\n\n      case \"rl\":\n        axis = [\"+x\", \"-x\"];\n        size = \"width\";\n        break;\n\n      case \"lr\":\n        axis = [\"-x\", \"+x\"];\n        size = \"width\";\n        break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    } // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n\n\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    } // Move the box to the specified position. This may not be its best\n    // position.\n\n\n    boxPosition.move(initialAxis, position);\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n    switch (cue.lineAlign) {\n      case \"middle\":\n        linePos -= calculatedPercentage / 2;\n        break;\n\n      case \"end\":\n        linePos -= calculatedPercentage;\n        break;\n    } // Apply initial line position to the cue box.\n\n\n    switch (cue.vertical) {\n      case \"\":\n        styleBox.applyStyles({\n          top: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"rl\":\n        styleBox.applyStyles({\n          left: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"lr\":\n        styleBox.applyStyles({\n          right: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n    }\n\n    axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n    // to it.\n\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {} // Nothing\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\nWebVTT.StringDecoder = function () {\n  return {\n    decode: function decode(data) {\n      if (!data) {\n        return \"\";\n      }\n\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function (window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\n\nWebVTT.processCues = function (window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  } // Remove all previous children.\n\n\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n\n    return false;\n  } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function () {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n\n      cue.displayState = styleBox.div;\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function (window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function reportOrThrowError(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function parse(data) {\n    var self = this; // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {\n        stream: true\n      });\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n\n      var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n\n      self.buffer = buffer.substr(pos);\n      return line;\n    } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n    function parseRegion(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"id\":\n            settings.set(k, v);\n            break;\n\n          case \"width\":\n            settings.percent(k, v);\n            break;\n\n          case \"lines\":\n            settings.integer(k, v);\n            break;\n\n          case \"regionanchor\":\n          case \"viewportanchor\":\n            var xy = v.split(',');\n\n            if (xy.length !== 2) {\n              break;\n            } // We have to make sure both x and y parse, so use a temporary\n            // settings object here.\n\n\n            var anchor = new Settings();\n            anchor.percent(\"x\", xy[0]);\n            anchor.percent(\"y\", xy[1]);\n\n            if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n              break;\n            }\n\n            settings.set(k + \"X\", anchor.get(\"x\"));\n            settings.set(k + \"Y\", anchor.get(\"y\"));\n            break;\n\n          case \"scroll\":\n            settings.alt(k, v, [\"up\"]);\n            break;\n        }\n      }, /=/, /\\s/); // Create the region, using default values for any values that were not\n      // specified.\n\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n        self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    } // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n\n\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"MPEGT\":\n            settings.integer(k + 'S', v);\n            break;\n\n          case \"LOCA\":\n            settings.set(k + 'L', parseTimeStamp(v));\n            break;\n        }\n      }, /[^\\d]:/, /,/);\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    } // 3.2 WebVTT metadata header syntax\n\n\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"X-TIMESTAMP-MAP\":\n              parseTimestampMap(v);\n              break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"Region\":\n              // 3.3 WebVTT region metadata header syntax\n              parseRegion(v);\n              break;\n          }\n        }, /:/);\n      }\n    } // 5.1 WebVTT file parsing.\n\n\n    try {\n      var line;\n\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n          case \"HEADER\":\n            // 13-18 - Allow a header (metadata) under the WEBVTT line.\n            if (/:/.test(line)) {\n              parseHeader(line);\n            } else if (!line) {\n              // An empty line terminates the header and starts the body (cues).\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"NOTE\":\n            // Ignore NOTE blocks.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"ID\":\n            // Check for the start of NOTE blocks.\n            if (/^NOTE($|[ \\t])/.test(line)) {\n              self.state = \"NOTE\";\n              break;\n            } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n            if (!line) {\n              continue;\n            }\n\n            self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n            self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n            if (line.indexOf(\"-->\") === -1) {\n              self.cue.id = line;\n              continue;\n            }\n\n          // Process line as start of a cue.\n\n          /*falls through*/\n\n          case \"CUE\":\n            // 40 - Collect cue timings and settings.\n            try {\n              parseCue(line, self.cue, self.regionList);\n            } catch (e) {\n              self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n              self.cue = null;\n              self.state = \"BADCUE\";\n              continue;\n            }\n\n            self.state = \"CUETEXT\";\n            continue;\n\n          case \"CUETEXT\":\n            var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n            // 35 - If we have the special substring '-->' then report the cue,\n            // but do not collect the line as we need to process the current\n            // one as a new cue.\n\n            if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n              // We are done parsing self cue.\n              self.oncue && self.oncue(self.cue);\n              self.cue = null;\n              self.state = \"ID\";\n              continue;\n            }\n\n            if (self.cue.text) {\n              self.cue.text += \"\\n\";\n            }\n\n            self.cue.text += line;\n            continue;\n\n          case \"BADCUE\":\n            // BADCUE\n            // 54-62 - Collect and discard the remaining cue.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n\n      self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n\n    return this;\n  },\n  flush: function flush() {\n    var self = this;\n\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      } // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n\n\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n    }\n\n    self.onflush && self.onflush();\n    return this;\n  }\n};\nmodule.exports = WebVTT;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function get() {\n        return _id;\n      },\n      set: function set(value) {\n        _id = \"\" + value;\n      }\n    },\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function get() {\n        return _pauseOnExit;\n      },\n      set: function set(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n    \"startTime\": {\n      enumerable: true,\n      get: function get() {\n        return _startTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"endTime\": {\n      enumerable: true,\n      get: function get() {\n        return _endTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"text\": {\n      enumerable: true,\n      get: function get() {\n        return _text;\n      },\n      set: function set(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"region\": {\n      enumerable: true,\n      get: function get() {\n        return _region;\n      },\n      set: function set(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"vertical\": {\n      enumerable: true,\n      get: function get() {\n        return _vertical;\n      },\n      set: function set(value) {\n        var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"snapToLines\": {\n      enumerable: true,\n      get: function get() {\n        return _snapToLines;\n      },\n      set: function set(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"line\": {\n      enumerable: true,\n      get: function get() {\n        return _line;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"lineAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _lineAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"position\": {\n      enumerable: true,\n      get: function get() {\n        return _position;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"positionAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _positionAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"size\": {\n      enumerable: true,\n      get: function get() {\n        return _size;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"align\": {\n      enumerable: true,\n      get: function get() {\n        return _align;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n  /**\n   * Other <track> spec defined properties\n   */\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n  this.displayState = undefined;\n}\n/**\n * VTTCue methods\n */\n\n\nVTTCue.prototype.getCueAsHTML = function () {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && value >= 0 && value <= 100;\n} // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function get() {\n        return _width;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function get() {\n        return _lines;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function get() {\n        return _scroll;\n      },\n      set: function set(value) {\n        var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;","var toUnsigned = function toUnsigned(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n  var i,\n      currentNal,\n      currentFrame = [],\n      frames = [];\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  } // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n\n\n  if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  } // Push the final frame\n\n\n  frames.push(currentFrame);\n  return frames;\n}; // Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\n\n\nvar groupFramesIntoGops = function groupFramesIntoGops(frames) {\n  var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration; // push the final Gop\n\n  gops.push(currentGop);\n  return gops;\n};\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\n\n\nvar extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\n\n\nvar createDefaultSample = function createDefaultSample() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\n\n\nvar sampleForFrame = function sampleForFrame(frame, dataOffset) {\n  var sample = createDefaultSample();\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n}; // generate the track's sample table from an array of gops\n\n\nvar generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n  var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n      sample = sampleForFrame(currentFrame, dataOffset);\n      dataOffset += sample.size;\n      samples.push(sample);\n    }\n  }\n\n  return samples;\n}; // generate the track's raw mdat data from an array of gops\n\n\nvar concatenateNalData = function concatenateNalData(gops) {\n  var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h]; // For each Frame..\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i]; // For each NAL..\n\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};","var coneOfSilence = require('../data/silence');\n\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\n\nvar sumFrameByteLengths = function sumFrameByteLengths(array) {\n  var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n}; // Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\n\n\nvar prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n  var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  } // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n\n\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n}; // If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\n\n\nvar trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  } // We will need to recalculate the earliest segment Dts\n\n\n  track.minSegmentDts = Infinity;\n  return adtsFrames.filter(function (currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    } // Otherwise, discard it\n\n\n    return false;\n  });\n}; // generate the track's raw mdat data from an array of frames\n\n\nvar generateSampleTable = function generateSampleTable(frames) {\n  var i,\n      currentFrame,\n      samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n    });\n  }\n\n  return samples;\n}; // generate the track's sample table from an array of frames\n\n\nvar concatenateFrameData = function concatenateFrameData(frames) {\n  var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\nvar zeroFill = function zeroFill(count) {\n  var a = [];\n\n  while (count--) {\n    a.push(0);\n  }\n\n  return a;\n};\n\nvar makeTable = function makeTable(metaTable) {\n  return Object.keys(metaTable).reduce(function (obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n}; // Frames-of-silence to use for filling in missing AAC frames\n\n\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\nmodule.exports = makeTable(coneOfSilence);","var ONE_SECOND_IN_TS = 90000,\n    // 90kHz clock\nsecondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs;\n\nsecondsToVideoTs = function secondsToVideoTs(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function videoTsToSeconds(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\n\nvar collectDtsInfo = function collectDtsInfo(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\n\n\nvar clearDtsInfo = function clearDtsInfo(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\nvar calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n  var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n\n\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n  baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js'),\n    CaptionStream = require('./caption-stream'),\n    StreamTypes = require('./stream-types'),\n    TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js'); // object types\n\n\nvar _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\nvar MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\n\n_TransportPacketStream = function TransportPacketStream() {\n  var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n      bytesInBuffer = 0;\n\n  _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n\n\n  this.push = function (bytes) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    } // While we have enough data for a packet\n\n\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n\n\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n\n\n  this.flush = function () {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n\n    this.trigger('done');\n  };\n};\n\n_TransportPacketStream.prototype = new Stream();\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\n\n_TransportParseStream = function TransportParseStream() {\n  var parsePsi, parsePat, parsePmt, self;\n\n  _TransportParseStream.prototype.init.call(this);\n\n  self = this;\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function parsePsi(payload, psi) {\n    var offset = 0; // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function parsePat(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n    // skip the PSI header and parse the first PMT entry\n\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n\n\n  parsePmt = function parsePmt(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(payload[5] & 0x01)) {\n      return;\n    } // overwrite any existing program map table\n\n\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    }; // the mapping table ends at the end of the current section\n\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n    offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n\n      if (streamType === StreamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      } // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    } // record the map on the packet as well\n\n\n    pmt.programMapTable = self.programMapTable;\n  };\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n\n\n  this.push = function (packet) {\n    var result = {},\n        offset = 4;\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[offset] + 1;\n    } // parse the rest of the packet based on the type\n\n\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function (packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n    this.trigger('data', result);\n  };\n};\n\n_TransportParseStream.prototype = new Stream();\n_TransportParseStream.STREAM_TYPES = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\n\n_ElementaryStream = function ElementaryStream() {\n  var self = this,\n      // PES packet fragments\n  video = {\n    data: [],\n    size: 0\n  },\n      audio = {\n    data: [],\n    size: 0\n  },\n      timedMetadata = {\n    data: [],\n    size: 0\n  },\n      parsePes = function parsePes(payload, pes) {\n    var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n    pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n    pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n      pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    } // the data section starts immediately after the PES header.\n    // pes_header_data_length specifies the number of header bytes\n    // that follow the last byte of the field.\n\n\n    pes.data = payload.subarray(9 + payload[8]);\n  },\n\n  /**\n    * Pass completely parsed PES packets to the next stream in the pipeline\n   **/\n  flushStream = function flushStream(stream, type, forceFlush) {\n    var packetData = new Uint8Array(stream.size),\n        event = {\n      type: type\n    },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment; // do nothing if there is not enough buffered data for a complete\n    // PES header\n\n    if (!stream.data.length || stream.size < 9) {\n      return;\n    }\n\n    event.trackId = stream.data[0].pid; // reassemble the packet\n\n    for (i = 0; i < stream.data.length; i++) {\n      fragment = stream.data[i];\n      packetData.set(fragment.data, offset);\n      offset += fragment.data.byteLength;\n    } // parse assembled packet's PES header\n\n\n    parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n    // check that there is enough stream data to fill the packet\n\n    packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n    if (forceFlush || packetFlushable) {\n      stream.size = 0;\n      stream.data.length = 0;\n    } // only emit packets that are complete. this is to avoid assembling\n    // incomplete PES packets due to poor segmentation\n\n\n    if (packetFlushable) {\n      self.trigger('data', event);\n    }\n  };\n\n  _ElementaryStream.prototype.init.call(this);\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n\n\n  this.push = function (data) {\n    ({\n      pat: function pat() {// we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function pes() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n          case StreamTypes.H264_STREAM_TYPE:\n          case m2tsStreamTypes.H264_STREAM_TYPE:\n            stream = video;\n            streamType = 'video';\n            break;\n\n          case StreamTypes.ADTS_STREAM_TYPE:\n            stream = audio;\n            streamType = 'audio';\n            break;\n\n          case StreamTypes.METADATA_STREAM_TYPE:\n            stream = timedMetadata;\n            streamType = 'timed-metadata';\n            break;\n\n          default:\n            // ignore unknown stream types\n            return;\n        } // if a new packet is starting, we can flush the completed\n        // packet\n\n\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        } // buffer this fragment until we are sure we've received the\n        // complete payload\n\n\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function pmt() {\n        var event = {\n          type: 'metadata',\n          tracks: []\n        },\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n\n\n  this.flush = function () {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\n\n_ElementaryStream.prototype = new Stream();\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: _TransportPacketStream,\n  TransportParseStream: _TransportParseStream,\n  ElementaryStream: _ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\n\nvar Stream = require('../utils/stream'),\n    StreamTypes = require('./stream-types'),\n    // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\npercentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n},\n    // return the string representation of the specified byte range,\n// interpreted as UTf-8.\nparseUtf8 = function parseUtf8(bytes, start, end) {\n  return decodeURIComponent(percentEncode(bytes, start, end));\n},\n    // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nparseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n},\n    parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n},\n    tagParsers = {\n  TXXX: function TXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the text fields\n        tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n        tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n        break;\n      }\n    }\n\n    tag.data = tag.value;\n  },\n  WXXX: function WXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.description = parseUtf8(tag.data, 1, i);\n        tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n        break;\n      }\n    }\n  },\n  PRIV: function PRIV(tag) {\n    var i;\n\n    for (i = 0; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.owner = parseIso88591(tag.data, 0, i);\n        break;\n      }\n    }\n\n    tag.privateData = tag.data.subarray(i + 1);\n    tag.data = tag.privateData;\n  }\n},\n    _MetadataStream;\n\n_MetadataStream = function MetadataStream(options) {\n  var settings = {\n    debug: !!(options && options.debug),\n    // the bytes of the program-level descriptor field in MP2T\n    // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n    // program element descriptors\"\n    descriptor: options && options.descriptor\n  },\n      // the total size in bytes of the ID3 tag being parsed\n  tagSize = 0,\n      // tag data that is not complete enough to be parsed\n  buffer = [],\n      // the total number of bytes currently in the buffer\n  bufferSize = 0,\n      i;\n\n  _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function (chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    } // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n\n\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    } // ignore events that don't look like ID3 data\n\n\n    if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n\n      return;\n    } // add this chunk to the data we've collected so far\n\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n\n      tagSize += 10;\n    } // if the entire frame has not arrived, wait for more data\n\n\n    if (bufferSize < tagSize) {\n      return;\n    } // collect the entire frame so it can be parsed\n\n\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    } // find the start of the first frame and the end of the tag\n\n\n    frameStart = 10;\n\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n\n      frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n              size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n\n          this.trigger('timestamp', frame);\n        }\n      }\n\n      tag.frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n\n    this.trigger('data', tag);\n  };\n};\n\n_MetadataStream.prototype = new Stream();\nmodule.exports = _MetadataStream;","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar _AdtsStream;\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\n\n_AdtsStream = function AdtsStream() {\n  var buffer;\n\n  _AdtsStream.prototype.init.call(this);\n\n  this.push = function (packet) {\n    var i = 0,\n        frameNum = 0,\n        frameLength,\n        protectionSkipBytes,\n        frameEnd,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    } // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n\n\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    } // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n    while (i + 5 < buffer.length) {\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n\n\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n\n      frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n      frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n\n      if (buffer.byteLength < frameEnd) {\n        return;\n      } // Otherwise, deliver the complete AAC frame\n\n\n      this.trigger('data', {\n        pts: packet.pts + frameNum * adtsFrameDuration,\n        dts: packet.dts + frameNum * adtsFrameDuration,\n        sampleCount: sampleCount,\n        audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n        channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      }); // If the buffer is empty, clear it and return\n\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++; // Remove the finished frame from the buffer and start the process again\n\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n\n  this.flush = function () {\n    this.trigger('done');\n  };\n};\n\n_AdtsStream.prototype = new Stream();\nmodule.exports = _AdtsStream;","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar _H264Stream, _NalByteStream;\n\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\n\n_NalByteStream = function NalByteStream() {\n  var syncPoint = 0,\n      i,\n      buffer;\n\n  _NalByteStream.prototype.init.call(this);\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n\n\n  this.push = function (data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    } // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n    // advance the sync point to a NAL start, if necessary\n\n\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n        case 0:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0) {\n            i += 2;\n            break;\n          } else if (buffer[i - 2] !== 0) {\n            i++;\n            break;\n          } // deliver the NAL unit if it isn't empty\n\n\n          if (syncPoint + 3 !== i - 2) {\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          } // drop trailing zeroes\n\n\n          do {\n            i++;\n          } while (buffer[i] !== 1 && i < buffer.length);\n\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n            i += 3;\n            break;\n          } // deliver the NAL unit\n\n\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          i += 3;\n          break;\n      }\n    } // filter out the NAL units that were delivered\n\n\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function () {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    } // reset the stream state\n\n\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\n\n_NalByteStream.prototype = new Stream(); // values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\n\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\n\n_H264Stream = function H264Stream() {\n  var nalByteStream = new _NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n\n  _H264Stream.prototype.init.call(this);\n\n  self = this;\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n\n  this.push = function (packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n    nalByteStream.push(packet);\n  };\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n\n\n  nalByteStream.on('data', function (data) {\n    var event = {\n      trackId: trackId,\n      pts: currentPts,\n      dts: currentDts,\n      data: data\n    };\n\n    switch (data[0] & 0x1f) {\n      case 0x05:\n        event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n        break;\n\n      case 0x06:\n        event.nalUnitType = 'sei_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        break;\n\n      case 0x07:\n        event.nalUnitType = 'seq_parameter_set_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        event.config = readSequenceParameterSet(event.escapedRBSP);\n        break;\n\n      case 0x08:\n        event.nalUnitType = 'pic_parameter_set_rbsp';\n        break;\n\n      case 0x09:\n        event.nalUnitType = 'access_unit_delimiter_rbsp';\n        break;\n\n      default:\n        break;\n    } // This triggers data on the H264Stream\n\n\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function () {\n    self.trigger('done');\n  });\n\n  this.flush = function () {\n    nalByteStream.flush();\n  };\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n\n\n  skipScalingList = function skipScalingList(count, expGolombDecoder) {\n    var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = nextScale === 0 ? lastScale : nextScale;\n    }\n  };\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n\n  discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n\n\n  readSequenceParameterSet = function readSequenceParameterSet(data) {\n    var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        sarScale = 1,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio,\n        aspectRatioIdc,\n        i;\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // seq_scaling_matrix_present_flag\n        scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n    if (expGolombDecoder.readBoolean()) {\n      // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n        switch (aspectRatioIdc) {\n          case 1:\n            sarRatio = [1, 1];\n            break;\n\n          case 2:\n            sarRatio = [12, 11];\n            break;\n\n          case 3:\n            sarRatio = [10, 11];\n            break;\n\n          case 4:\n            sarRatio = [16, 11];\n            break;\n\n          case 5:\n            sarRatio = [40, 33];\n            break;\n\n          case 6:\n            sarRatio = [24, 11];\n            break;\n\n          case 7:\n            sarRatio = [20, 11];\n            break;\n\n          case 8:\n            sarRatio = [32, 11];\n            break;\n\n          case 9:\n            sarRatio = [80, 33];\n            break;\n\n          case 10:\n            sarRatio = [18, 11];\n            break;\n\n          case 11:\n            sarRatio = [15, 11];\n            break;\n\n          case 12:\n            sarRatio = [64, 33];\n            break;\n\n          case 13:\n            sarRatio = [160, 99];\n            break;\n\n          case 14:\n            sarRatio = [4, 3];\n            break;\n\n          case 15:\n            sarRatio = [3, 2];\n            break;\n\n          case 16:\n            sarRatio = [2, 1];\n            break;\n\n          case 255:\n            {\n              sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n              break;\n            }\n        }\n\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n    };\n  };\n};\n\n_H264Stream.prototype = new Stream();\nmodule.exports = {\n  H264Stream: _H264Stream,\n  NalByteStream: _NalByteStream\n};","'use strict';\n\nvar ExpGolomb;\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\n\nExpGolomb = function ExpGolomb(workingData) {\n  var // the number of bytes left to examine in workingData\n  workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n  workingWord = 0,\n      // :uint\n  // the number of bits left to examine in the current word\n  workingBitsAvailable = 0; // :uint;\n  // ():uint\n\n  this.length = function () {\n    return 8 * workingBytesAvailable;\n  }; // ():uint\n\n\n  this.bitsAvailable = function () {\n    return 8 * workingBytesAvailable + workingBitsAvailable;\n  }; // ():void\n\n\n  this.loadWord = function () {\n    var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position, position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  }; // (count:int):void\n\n\n  this.skipBits = function (count) {\n    var skipBytes; // :int\n\n    if (workingBitsAvailable > count) {\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n      count -= skipBytes * 8;\n      workingBytesAvailable -= skipBytes;\n      this.loadWord();\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  }; // (size:int):uint\n\n\n  this.readBits = function (size) {\n    var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n    valu = workingWord >>> 32 - bits; // :uint\n    // if size > 31, handle error\n\n    workingBitsAvailable -= bits;\n\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n\n    return valu;\n  }; // ():uint\n\n\n  this.skipLeadingZeros = function () {\n    var leadingZeroCount; // :uint\n\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    } // we exhausted workingWord and still have not found a 1\n\n\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  }; // ():void\n\n\n  this.skipUnsignedExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():void\n\n\n  this.skipExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():uint\n\n\n  this.readUnsignedExpGolomb = function () {\n    var clz = this.skipLeadingZeros(); // :uint\n\n    return this.readBits(clz + 1) - 1;\n  }; // ():int\n\n\n  this.readExpGolomb = function () {\n    var valu = this.readUnsignedExpGolomb(); // :int\n\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n    }\n\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  }; // Some convenience functions\n  // :Boolean\n\n\n  this.readBoolean = function () {\n    return this.readBits(1) === 1;\n  }; // ():int\n\n\n  this.readUnsignedByte = function () {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar aacUtils = require('./utils'); // Constants\n\n\nvar _AacStream;\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\n\n_AacStream = function AacStream() {\n  var everything = new Uint8Array(),\n      timeStamp = 0;\n\n  _AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function (timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function (bytes) {\n    var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        } // check framesize\n\n\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n\n      byteIndex++;\n    }\n\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\n_AacStream.prototype = new Stream();\nmodule.exports = _AacStream;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\n\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\n\nvar probe = require('./probe');\n\nvar inspect = require('../tools/mp4-inspector');\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar mapToSample = function mapToSample(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\n\n\nvar findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // Bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x06:\n        var data = avcStream.subarray(i + 1, i + 1 + length);\n        var matchingSample = mapToSample(i, samples);\n        seiNal = {\n          nalUnitType: 'sei_rbsp',\n          size: length,\n          data: data,\n          escapedRBSP: discardEmulationPreventionBytes(data),\n          trackId: trackId\n        };\n\n        if (matchingSample) {\n          seiNal.pts = matchingSample.pts;\n          seiNal.dts = matchingSample.dts;\n          lastMatchedSample = matchingSample;\n        } else {\n          // If a matching sample cannot be found, use the last\n          // sample's values as they should be as close as possible\n          seiNal.pts = lastMatchedSample.pts;\n          seiNal.dts = lastMatchedSample.dts;\n        }\n\n        result.push(seiNal);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return result;\n};\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n  truns.forEach(function (trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n    samples.forEach(function (sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n\n      sample.pts = currentDts + sample.compositionTimeOffset;\n      currentDts += sample.duration;\n    });\n    allSamples = allSamples.concat(samples);\n  });\n  return allSamples;\n};\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\n\n\nvar parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n  mdats.forEach(function (mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n  mdatTrafPairs.forEach(function (pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n    var baseMediaDecodeTime = tfdt.length > 0 ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals; // Only parse video data for the chosen video track\n\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n  return captionNals;\n};\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\n\n\nvar parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\n\n\nvar CaptionParser = function CaptionParser() {\n  var isInitialized = false;\n  var captionStream; // Stores segments seen before trackId and timescale are set\n\n  var segmentCache; // Stores video track ID of the track being parsed\n\n  var trackId; // Stores the timescale of the track being parsed\n\n  var timescale; // Stores captions parsed so far\n\n  var parsedCaptions;\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n\n  this.isInitialized = function () {\n    return isInitialized;\n  };\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n\n\n  this.init = function () {\n    captionStream = new CaptionStream();\n    isInitialized = true; // Collect dispatched captions\n\n    captionStream.on('data', function (event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n\n\n  this.isNewInit = function (videoTrackIds, timescales) {\n    if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n  };\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.parse = function (segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null; // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n      // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    } // Now that a timescale and trackId is set, parse cached segments\n\n\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n    this.flushStream();\n    return parsedCaptions;\n  };\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n\n\n  this.pushNals = function (nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function (nal) {\n      captionStream.push(nal);\n    });\n  };\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.flushStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n  /**\n    * Reset caption buckets for new data\n   **/\n\n\n  this.clearParsedCaptions = function () {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.resetCaptionStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.clearAllCaptions = function () {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n  /**\n    * Reset caption parser\n   **/\n\n\n  this.reset = function () {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar inspectMp4,\n    _textifyMp,\n    parseType = require('../mp4/probe').parseType,\n    parseMp4Date = function parseMp4Date(seconds) {\n  return new Date(seconds * 1000 - 2082844800000);\n},\n    parseSampleFlags = function parseSampleFlags(flags) {\n  return {\n    isLeading: (flags[0] & 0x0c) >>> 2,\n    dependsOn: flags[0] & 0x03,\n    isDependedOn: (flags[1] & 0xc0) >>> 6,\n    hasRedundancy: (flags[1] & 0x30) >>> 4,\n    paddingValue: (flags[1] & 0x0e) >>> 1,\n    isNonSyncSample: flags[1] & 0x01,\n    degradationPriority: flags[2] << 8 | flags[3]\n  };\n},\n    nalParse = function nalParse(avcStream) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n    }\n  }\n\n  return result;\n},\n    // registry of handlers for individual mp4 box types\nparse = {\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  avc1: function avc1(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      dataReferenceIndex: view.getUint16(6),\n      width: view.getUint16(24),\n      height: view.getUint16(26),\n      horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n      vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n      frameCount: view.getUint16(40),\n      depth: view.getUint16(74),\n      config: inspectMp4(data.subarray(78, data.byteLength))\n    };\n  },\n  avcC: function avcC(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      configurationVersion: data[0],\n      avcProfileIndication: data[1],\n      profileCompatibility: data[2],\n      avcLevelIndication: data[3],\n      lengthSizeMinusOne: data[4] & 0x03,\n      sps: [],\n      pps: []\n    },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i; // iterate past any SPSs\n\n    offset = 6;\n\n    for (i = 0; i < numOfSequenceParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    } // iterate past any PPSs\n\n\n    numOfPictureParameterSets = data[offset];\n    offset++;\n\n    for (i = 0; i < numOfPictureParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    }\n\n    return result;\n  },\n  btrt: function btrt(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      bufferSizeDB: view.getUint32(0),\n      maxBitrate: view.getUint32(4),\n      avgBitrate: view.getUint32(8)\n    };\n  },\n  esds: function esds(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      esId: data[6] << 8 | data[7],\n      streamPriority: data[8] & 0x1f,\n      decoderConfig: {\n        objectProfileIndication: data[11],\n        streamType: data[12] >>> 2 & 0x3f,\n        bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n        maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n        avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n        decoderConfigDescriptor: {\n          tag: data[24],\n          length: data[25],\n          audioObjectType: data[26] >>> 3 & 0x1f,\n          samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n          channelConfiguration: data[27] >>> 3 & 0x0f\n        }\n      }\n    };\n  },\n  ftyp: function ftyp(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      majorBrand: parseType(data.subarray(0, 4)),\n      minorVersion: view.getUint32(4),\n      compatibleBrands: []\n    },\n        i = 8;\n\n    while (i < data.byteLength) {\n      result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n      i += 4;\n    }\n\n    return result;\n  },\n  dinf: function dinf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  dref: function dref(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      dataReferences: inspectMp4(data.subarray(8))\n    };\n  },\n  hdlr: function hdlr(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      handlerType: parseType(data.subarray(8, 12)),\n      name: ''\n    },\n        i = 8; // parse out the name field\n\n    for (i = 24; i < data.byteLength; i++) {\n      if (data[i] === 0x00) {\n        // the name field is null-terminated\n        i++;\n        break;\n      }\n\n      result.name += String.fromCharCode(data[i]);\n    } // decode UTF-8 to javascript's internal representation\n    // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n    result.name = decodeURIComponent(escape(result.name));\n    return result;\n  },\n  mdat: function mdat(data) {\n    return {\n      byteLength: data.byteLength,\n      nals: nalParse(data)\n    };\n  },\n  mdhd: function mdhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      language: ''\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n    // each field is the packed difference between its ASCII value and 0x60\n\n    language = view.getUint16(i);\n    result.language += String.fromCharCode((language >> 10) + 0x60);\n    result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n    result.language += String.fromCharCode((language & 0x1f) + 0x60);\n    return result;\n  },\n  mdia: function mdia(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mfhd: function mfhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n  },\n  minf: function minf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  mp4a: function mp4a(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      // 6 bytes reserved\n      dataReferenceIndex: view.getUint16(6),\n      // 4 + 4 bytes reserved\n      channelcount: view.getUint16(16),\n      samplesize: view.getUint16(18),\n      // 2 bytes pre_defined\n      // 2 bytes reserved\n      samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n    }; // if there are more bytes to process, assume this is an ISO/IEC\n    // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n    if (data.byteLength > 28) {\n      result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n    }\n\n    return result;\n  },\n  moof: function moof(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  moov: function moov(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvex: function mvex(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvhd: function mvhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // convert fixed-point, base 16 back to a number\n\n    result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    i += 2 * 4;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    i += 6 * 4;\n    result.nextTrackId = view.getUint32(i);\n    return result;\n  },\n  pdin: function pdin(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      rate: view.getUint32(4),\n      initialDelay: view.getUint32(8)\n    };\n  },\n  sdtp: function sdtp(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        i;\n\n    for (i = 4; i < data.byteLength; i++) {\n      result.samples.push({\n        dependsOn: (data[i] & 0x30) >> 4,\n        isDependedOn: (data[i] & 0x0c) >> 2,\n        hasRedundancy: data[i] & 0x03\n      });\n    }\n\n    return result;\n  },\n  sidx: function sidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8),\n      earliestPresentationTime: view.getUint32(12),\n      firstOffset: view.getUint32(16)\n    },\n        referenceCount = view.getUint16(22),\n        i;\n\n    for (i = 24; referenceCount; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  },\n  smhd: function smhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      balance: data[4] + data[5] / 256\n    };\n  },\n  stbl: function stbl(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  stco: function stco(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      chunkOffsets: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 4, entryCount--) {\n      result.chunkOffsets.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stsc: function stsc(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleToChunks: []\n    },\n        i;\n\n    for (i = 8; entryCount; i += 12, entryCount--) {\n      result.sampleToChunks.push({\n        firstChunk: view.getUint32(i),\n        samplesPerChunk: view.getUint32(i + 4),\n        sampleDescriptionIndex: view.getUint32(i + 8)\n      });\n    }\n\n    return result;\n  },\n  stsd: function stsd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleDescriptions: inspectMp4(data.subarray(8))\n    };\n  },\n  stsz: function stsz(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleSize: view.getUint32(4),\n      entries: []\n    },\n        i;\n\n    for (i = 12; i < data.byteLength; i += 4) {\n      result.entries.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stts: function stts(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      timeToSamples: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 8, entryCount--) {\n      result.timeToSamples.push({\n        sampleCount: view.getUint32(i),\n        sampleDelta: view.getUint32(i + 4)\n      });\n    }\n\n    return result;\n  },\n  styp: function styp(data) {\n    return parse.ftyp(data);\n  },\n  tfdt: function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime *= Math.pow(2, 32);\n      result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n    }\n\n    return result;\n  },\n  tfhd: function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  },\n  tkhd: function tkhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4;\n    i += 2 * 4;\n    result.layer = view.getUint16(i);\n    i += 2;\n    result.alternateGroup = view.getUint16(i);\n    i += 2; // convert fixed-point, base 16 back to a number\n\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    return result;\n  },\n  traf: function traf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trak: function trak(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trex: function trex(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4),\n      defaultSampleDescriptionIndex: view.getUint32(8),\n      defaultSampleDuration: view.getUint32(12),\n      defaultSampleSize: view.getUint32(16),\n      sampleDependsOn: data[20] & 0x03,\n      sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n      sampleHasRedundancy: (data[21] & 0x30) >> 4,\n      samplePaddingValue: (data[21] & 0x0e) >> 1,\n      sampleIsDifferenceSample: !!(data[21] & 0x01),\n      sampleDegradationPriority: view.getUint16(22)\n    };\n  },\n  trun: function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  },\n  'url ': function url(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n  },\n  vmhd: function vmhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      graphicsmode: view.getUint16(4),\n      opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n    };\n  }\n};\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\n\n\ninspectMp4 = function inspectMp4(data) {\n  var i = 0,\n      result = [],\n      view,\n      size,\n      type,\n      end,\n      box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n\n  for (var z = 0; z < data.length; ++z) {\n    v[z] = data[z];\n  }\n\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n    box = (parse[type] || function (data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n\n    box.size = size;\n    box.type = type; // store this box and move to the next\n\n    result.push(box);\n    i = end;\n  }\n\n  return result;\n};\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\n\n\n_textifyMp = function textifyMp4(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n  return inspectedMp4.map(function (box, index) {\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n    Object.keys(box).filter(function (key) {\n      return key !== 'type' && key !== 'boxes'; // output all the box properties\n    }).map(function (key) {\n      var prefix = indent + '  ' + key + ': ',\n          value = box[key]; // print out raw bytes as hexademical\n\n      if (value instanceof Uint8Array || value instanceof Uint32Array) {\n        var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n          return ' ' + ('00' + _byte.toString(16)).slice(-2);\n        }).join('').match(/.{1,24}/g);\n\n        if (!bytes) {\n          return prefix + '<>';\n        }\n\n        if (bytes.length === 1) {\n          return prefix + '<' + bytes.join('').slice(1) + '>';\n        }\n\n        return prefix + '<\\n' + bytes.map(function (line) {\n          return indent + '  ' + line;\n        }).join('\\n') + '\\n' + indent + '  >';\n      } // stringify generic objects\n\n\n      return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n        if (index === 0) {\n          return line;\n        }\n\n        return indent + '  ' + line;\n      }).join('\\n');\n    }).join('\\n') + ( // recursively textify the child boxes\n    box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: _textifyMp,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function parsePid(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function parseAdaptionField(packet) {\n  var offset = 0; // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n\n  if ((packet[3] & 0x30) >>> 4 > 0x01) {\n    offset += packet[4] + 1;\n  }\n\n  return offset;\n};\n\nvar parseType = function parseType(packet, pmtPid) {\n  var pid = parsePid(packet);\n\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n\n  return null;\n};\n\nvar parsePat = function parsePat(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function parsePmt(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  } // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n\n\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n  var offset = 12 + programInfoLength;\n\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n\n  return programMapTable;\n};\n\nvar parsePesType = function parsePesType(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function parsePesTime(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n\n  ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n\n  if (ptsDtsFlags & 0xC0) {\n    pes = {}; // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n    pes.pts *= 4; // Left shift by 2\n\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n    pes.dts = pes.pts;\n\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n\n  return pes;\n};\n\nvar parseNalUnitType = function parseNalUnitType(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n\n    case 0x06:\n      return 'sei_rbsp';\n\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType; // advance the sync point to a NAL start, if necessary\n\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n      case 0:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0) {\n          frameI += 2;\n          break;\n        } else if (frameBuffer[frameI - 2] !== 0) {\n          frameI++;\n          break;\n        }\n\n        if (frameSyncPoint + 3 !== frameI - 2) {\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n        } // drop trailing zeroes\n\n\n        do {\n          frameI++;\n        } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      case 1:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n          frameI += 3;\n          break;\n        }\n\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        frameI += 3;\n        break;\n    }\n  }\n\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0; // parse the final nal\n\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};"],"sourceRoot":""}