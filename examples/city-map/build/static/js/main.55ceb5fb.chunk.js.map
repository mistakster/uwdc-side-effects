{"version":3,"sources":["logo.svg","leafletMiddleware.js","store.js","markersReducer.js","Tabs.js","CityMap.js","MarkerList.js","MarkerPanel.js","Content.js","Logo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DefaultIcon","L","Icon","extend","options","iconUrl","marker","iconRetinaUrl","marker2x","shadowUrl","markerShadow","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","Marker","prototype","icon","map","addMarker","point","addTo","rootReducer","combineReducers","markers","state","action","list","type","Object","objectSpread","concat","toConsumableArray","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","getState","element","center","zoom","layers","tileLayer","attribution","maxZoom","forEach","remove","bounds","getBounds","west","getWest","east","getEast","north","getNorth","south","getSouth","Math","random","createRandomMarker","dispatch","Tabs","_ref","titles","children","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","tabs","Children","toArray","react_default","a","createElement","className","tab","index","key","onClick","enhance","connect","createMap","destroyMap","mapContainer","useRef","useEffect","current","ref","MarkerList","length","style","width","item","toFixed","src_MarkerList","Content","src_CityMap","src_MarkerPanel","Logo","src","logo","alt","App","es","src_Tabs","src_Content","src_Logo_0","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55ceb5fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport marker from 'leaflet/dist/images/marker-icon.png';\nimport marker2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\n\nconst DefaultIcon = L.Icon.extend({\n  options: {\n    iconUrl: marker,\n    iconRetinaUrl: marker2x,\n    shadowUrl: markerShadow,\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    tooltipAnchor: [16, -28],\n    shadowSize: [41, 41]\n  }\n});\n\nL.Marker.prototype.options.icon = new DefaultIcon();\n\nlet map = null;\n\nfunction createMap(element, list) {\n  map = L.map(element, {\n    center: [55.167184, 61.3932883],\n    zoom: 15,\n    layers: [\n      L.tileLayer('https://api.tiles.mapbox.com/v4/mapbox.satellite/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWlzdGFrc3RlciIsImEiOiJjanc5MzA5aDgwMzVsNDhwbXp1eWF6ZXh3In0.flXS8A_nJbv_Pb_xWIq0WA', {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 18\n      })\n    ]\n  });\n\n  list.forEach(addMarker);\n}\n\nfunction destroyMap() {\n  if (map) {\n    map.remove();\n    map = null;\n  }\n}\n\nfunction createRandomMarker() {\n  if (!map) {\n    return null;\n  }\n\n  const bounds = map.getBounds();\n  const west = bounds.getWest();\n  const east = bounds.getEast();\n  const north = bounds.getNorth();\n  const south = bounds.getSouth();\n\n  return [\n    Math.random() * (north - south) + south,\n    Math.random() * (east - west) + west\n  ];\n}\n\nfunction addMarker(point) {\n  if (!map) {\n    return null;\n  }\n\n  L.marker(point).addTo(map);\n}\n\n\nexport default store => next => action => {\n  switch (action.type) {\n    case 'LEAFLET_CREATE_MAP': {\n      const { markers } = store.getState();\n\n      createMap(action.element, markers.list);\n\n      break;\n    }\n    case 'LEAFLET_DESTROY_MAP': {\n      destroyMap();\n\n      break;\n    }\n    case 'LEAFLET_CREATE_RANDOM_MARKER': {\n      const point = createRandomMarker();\n\n      if (point) {\n        store.dispatch({\n          type: 'ADD_MARKER',\n          point\n        });\n      }\n\n      break;\n    }\n    case 'ADD_MARKER': {\n      addMarker(action.point);\n\n      break;\n    }\n    default:\n      break;\n  }\n\n  return next(action);\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport markersReducer from './markersReducer.js';\nimport leafletMiddleware from './leafletMiddleware.js';\n\nconst rootReducer = combineReducers({\n  markers: markersReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(leafletMiddleware)\n));\n\nexport default store;\n","export default (state, action) => {\n  if (typeof state === 'undefined') {\n    return {\n      list: []\n    };\n  }\n\n  if (action.type === 'ADD_MARKER') {\n    return {\n      ...state,\n      list: [...state.list, action.point]\n    };\n  }\n\n  return state;\n};\n","import React, { Children, useState } from 'react';\n\nconst Tabs = ({ titles, children }) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const tabs = Children.toArray(children);\n\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      <div className=\"nav nav-pills nav-fill my-2\">\n        {tabs.map((tab, index) => (\n          <div key={index} className=\"nav-item\">\n            <span onClick={() => setActiveTab(index)} className={`nav-link ${activeTab === index ? 'active' : 'text-primary'}`}>\n              {titles[index]}\n            </span>\n          </div>\n        ))}\n      </div>\n      {tabs[activeTab]}\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React, { useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createMap(element) {\n      dispatch({\n        type: 'LEAFLET_CREATE_MAP',\n        element\n      });\n    },\n    destroyMap() {\n      dispatch({\n        type: 'LEAFLET_DESTROY_MAP'\n      });\n    }\n  };\n}\n\nconst enhance = connect(null, mapDispatchToProps);\n\nconst CityMap = ({ createMap, destroyMap }) => {\n  const mapContainer = useRef(null);\n\n  useEffect(() => {\n    createMap(mapContainer.current);\n\n    return () => {\n      destroyMap();\n    }\n  });\n\n  return (\n    <div className=\"w-100 h-100\" ref={mapContainer}/>\n  );\n};\n\nexport default enhance(CityMap);\n","import React from 'react';\n\nconst MarkerList = ({ list }) => {\n  if (!list || !list.length) {\n    return null;\n  }\n\n  return (\n    <table className=\"w-100\">\n      <thead>\n      <tr>\n        <th>#</th>\n        <th style={{ width: '40%' }}>Latitude</th>\n        <th style={{ width: '40%' }}>Longitude</th>\n      </tr>\n      </thead>\n      <tbody>\n      {list.map((item, key) => (\n        <tr key={key}>\n          <td>{key + 1}.</td>\n          <td>{item[0].toFixed(4)}</td>\n          <td>{item[1].toFixed(4)}</td>\n        </tr>\n      ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default MarkerList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport MarkerList from './MarkerList';\n\nfunction mapStateToProps(state) {\n  return state.markers;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMarker() {\n      dispatch({\n        type: 'LEAFLET_CREATE_RANDOM_MARKER'\n      });\n    }\n  };\n}\n\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\n\nconst MarkerPanel = ({ addMarker, list }) => {\n  return (\n    <div>\n      <div>\n        <button onClick={addMarker} className=\"btn btn-success\" type=\"button\">\n          Add marker\n        </button>\n      </div>\n      <div>\n        <MarkerList list={list}/>\n      </div>\n    </div>\n  );\n};\n\nexport default enhance(MarkerPanel);\n","import React from 'react';\nimport CityMap from './CityMap';\nimport MarkerPanel from './MarkerPanel';\n\nconst Content = () => {\n  return (\n    <div className=\"h-100 row\">\n      <div className=\"col-8\">\n        <CityMap/>\n      </div>\n      <div className=\"col-4\">\n        <MarkerPanel/>\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from 'react';\nimport './Logo.css';\nimport logo from './logo.svg';\n\nconst Logo = () => {\n  return (\n    <img src={logo} className=\"Logo\" alt=\"React logo\"/>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Tabs from './Tabs';\nimport Content from './Content';\nimport Logo from './Logo';\n\nconst App = () => (\n  <Provider store={store}>\n    <Tabs titles={['Map', 'Logo']}>\n      <Content/>\n      <Logo/>\n    </Tabs>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}